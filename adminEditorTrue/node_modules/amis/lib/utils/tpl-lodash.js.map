{
    "version": 3,
    "file": "tpl-lodash.js",
    "sourceRoot": "",
    "sources": [
        "/src/utils/tpl-lodash.ts"
    ],
    "names": [],
    "mappings": ";;;AAAA,6BAAiD;AACjD,qEAAuC;AACvC,6CAAyC;AAEzC,0DAA4B;AAE5B,IAAM,OAAO,GAAG;IACd,OAAO,EAAE,SAAS;IAClB,MAAM,EAAE,gBAAM;IACd,SAAS,EAAE,UAAC,GAAQ;QAClB,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,IAAI,CAAC;SACb;QAED,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;QAC9C,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAErB,IAAI,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,EAAE;YACxB,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;IACzE,CAAC;IACD,UAAU,EAAE,UAAC,KAAU,EAAE,MAAsB,EAAE,WAAwB;QAAhD,uBAAA,EAAA,cAAsB;QAAE,4BAAA,EAAA,gBAAwB;QACvE,OAAA,gBAAM,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;IAAzC,CAAyC;CAC5C,CAAC;AAEF,SAAS,aAAa,CAAC,GAAW,EAAE,IAAY;IAC9C,IAAI;QACF,IAAM,OAAO,GAAG,wBAAU,EAAE,CAAC;QAC7B,IAAM,aAAa,0DACd,OAAO,KACV,eAAe,EAAE,OAAO,CAAC,IAAI,EAC7B,YAAY,EAAE,OAAO,CAAC,MAAM,EAC5B,YAAY,EAAE,OAAO,CAAC,MAAM,KACzB,OAAO,CACX,CAAC;QACF,OAAO,aAAa,CAAC,OAAO,CAAC,CAAC,yCAAyC;QACvE,IAAM,EAAE,GAAG,kBAAQ,CAAC,GAAG,EAAE;YACvB,OAAO,EAAE,aAAa;YACtB,QAAQ,EAAE,MAAM;SACjB,CAAC,CAAC;QAEH,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;KACjB;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,iCAA6B,CAAC,CAAC,OAAO,YAAS,CAAC;KACxD;AACH,CAAC;AAED,SAAgB,QAAQ;IACtB,wBAAkB,CAAC,QAAQ,EAAE;QAC3B,IAAI,EAAE,UAAA,GAAG,IAAI,OAAA,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAApB,CAAoB;QACjC,OAAO,EAAE,UAAC,GAAW,EAAE,IAAY,IAAK,OAAA,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,EAAxB,CAAwB;KACjE,CAAC,CAAC;AACL,CAAC;AALD,4BAKC",
    "sourcesContent": [
        "import {reigsterTplEnginer, filter} from './tpl';\nimport template from 'lodash/template';\nimport {getFilters} from './tpl-builtin';\nimport React from 'react';\nimport moment from 'moment';\n\nconst imports = {\n  default: undefined,\n  moment: moment,\n  countDown: (end: any) => {\n    if (!end) {\n      return '--';\n    }\n\n    let date = new Date(parseInt(end, 10) * 1000);\n    let now = Date.now();\n\n    if (date.getTime() < now) {\n      return '已结束';\n    }\n\n    return Math.ceil((date.getTime() - now) / (1000 * 60 * 60 * 24)) + '天';\n  },\n  formatDate: (value: any, format: string = 'LLL', inputFormat: string = '') =>\n    moment(value, inputFormat).format(format)\n};\n\nfunction lodashCompile(str: string, data: object) {\n  try {\n    const filters = getFilters();\n    const finnalImports = {\n      ...filters,\n      formatTimeStamp: filters.date,\n      formatNumber: filters.number,\n      defaultValue: filters.defaut,\n      ...imports\n    };\n    delete finnalImports.default; // default 是个关键字，不能 imports 到 lodash 里面去。\n    const fn = template(str, {\n      imports: finnalImports,\n      variable: 'data'\n    });\n\n    return fn(data);\n  } catch (e) {\n    return `<span class=\"text-danger\">${e.message}</span>`;\n  }\n}\n\nexport function register() {\n  reigsterTplEnginer('lodash', {\n    test: str => !!~str.indexOf('<%'),\n    compile: (str: string, data: object) => lodashCompile(str, data)\n  });\n}\n"
    ]
}