{
    "version": 3,
    "file": "Card.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Card.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {findDOMNode} from 'react-dom';\nimport {Renderer, RendererProps} from '../factory';\nimport {SchemaNode, Schema, Action} from '../types';\nimport {filter, evalExpression} from '../utils/tpl';\nimport cx from 'classnames';\nimport Checkbox from '../components/Checkbox';\nimport {IItem} from '../store/list';\nimport {padArr, isVisible, isDisabled, noop} from '../utils/helper';\nimport {resolveVariable} from '../utils/tpl-builtin';\nimport QuickEdit from './QuickEdit';\nimport PopOver from './PopOver';\nimport {TableCell} from './Table';\nimport Copyable from './Copyable';\nimport {Icon} from '../components/icons';\n\nexport interface CardProps extends RendererProps {\n  onCheck: (item: IItem) => void;\n  itemIndex?: number;\n  multiple?: boolean;\n  highlightClassName?: string;\n  hideCheckToggler?: boolean;\n  item: IItem;\n  checkOnItemClick?: boolean;\n}\nexport class Card extends React.Component<CardProps> {\n  static defaultProps: Partial<CardProps> = {\n    className: '',\n    avatarClassName: '',\n    bodyClassName: '',\n    actionsCount: 4,\n    titleClassName: '',\n    highlightClassName: '',\n    subTitleClassName: '',\n    descClassName: ''\n  };\n\n  static propsList: Array<string> = [\n    'multiple',\n    'avatarClassName',\n    'bodyClassName',\n    'actionsCount',\n    'titleClassName',\n    'highlightClassName',\n    'subTitleClassName',\n    'descClassName',\n    'hideCheckToggler'\n  ];\n\n  constructor(props: CardProps) {\n    super(props);\n\n    this.getPopOverContainer = this.getPopOverContainer.bind(this);\n    this.itemRender = this.itemRender.bind(this);\n    this.handleAction = this.handleAction.bind(this);\n    this.handleQuickChange = this.handleQuickChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n  }\n\n  handleClick(e: React.MouseEvent<HTMLDivElement>) {\n    const target: HTMLElement = e.target as HTMLElement;\n    const ns = this.props.classPrefix;\n    let formItem;\n\n    if (\n      !e.currentTarget.contains(target) ||\n      ~['INPUT', 'TEXTAREA'].indexOf(target.tagName) ||\n      ((formItem = target.closest(`button, a, .${ns}Form-item`)) &&\n        e.currentTarget.contains(formItem))\n    ) {\n      return;\n    }\n\n    const item = this.props.item;\n    this.props.onCheck && this.props.onCheck(item);\n  }\n\n  handleCheck() {\n    const item = this.props.item;\n    this.props.onCheck && this.props.onCheck(item);\n  }\n\n  handleAction(e: React.UIEvent<any>, action: Action, ctx: object) {\n    const {onAction, item} = this.props;\n    onAction && onAction(e, action, ctx || item.data);\n  }\n\n  handleQuickChange(\n    values: object,\n    saveImmediately?: boolean,\n    savePristine?: boolean\n  ) {\n    const {onQuickChange, item} = this.props;\n    onQuickChange && onQuickChange(item, values, saveImmediately, savePristine);\n  }\n\n  getPopOverContainer() {\n    return findDOMNode(this);\n  }\n\n  renderToolbar() {\n    const {\n      dragging,\n      selectable,\n      checkable,\n      selected,\n      onSelect,\n      checkOnItemClick,\n      multiple,\n      hideCheckToggler,\n      classnames: cx,\n      classPrefix: ns\n    } = this.props;\n\n    if (dragging) {\n      return (\n        <div className={cx('Card-dragBtn')}>\n          <Icon icon=\"drag-bar\" className=\"icon\" />\n        </div>\n      );\n    } else if (selectable && !hideCheckToggler) {\n      return (\n        <div className={cx('Card-checkBtn')}>\n          <Checkbox\n            classPrefix={ns}\n            type={multiple ? 'checkbox' : 'radio'}\n            disabled={!checkable}\n            checked={selected}\n            onChange={checkOnItemClick ? noop : this.handleCheck}\n          />\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderActions() {\n    const {\n      actions,\n      render,\n      dragging,\n      actionsCount,\n      data,\n      classnames: cx\n    } = this.props;\n\n    if (Array.isArray(actions)) {\n      const group = padArr(\n        actions.filter(item => isVisible(item, data)),\n        actionsCount\n      );\n      return group.map((actions, groupIndex) => (\n        <div key={groupIndex} className={cx('Card-actions')}>\n          {actions.map((action, index) => {\n            const size = action.size || 'sm';\n\n            return render(\n              `action/${index}`,\n              {\n                level: 'link',\n                type: 'button',\n                ...action,\n                size\n              },\n              {\n                isMenuItem: true,\n                key: index,\n                index,\n                disabled: dragging || isDisabled(action, data),\n                className: cx(\n                  'Card-action',\n                  action.className || `${size ? `Card-action--${size}` : ''}`\n                ),\n                componentClass: 'a',\n                onAction: this.handleAction\n              }\n            );\n          })}\n        </div>\n      ));\n    }\n\n    return null;\n  }\n\n  renderChild(\n    node: SchemaNode,\n    region: string = 'body',\n    key: any = 0\n  ): React.ReactNode {\n    const {render} = this.props;\n\n    if (typeof node === 'string' || typeof node === 'number') {\n      return render(region, node, {key}) as JSX.Element;\n    }\n\n    const childNode: Schema = node as Schema;\n\n    if (childNode.type === 'hbox' || childNode.type === 'grid') {\n      return render(region, node, {\n        key,\n        itemRender: this.itemRender\n      }) as JSX.Element;\n    }\n\n    return this.renderFeild(region, childNode, key, this.props);\n  }\n\n  itemRender(field: any, index: number, props: any) {\n    return this.renderFeild(`column/${index}`, field, index, props);\n  }\n\n  renderFeild(region: string, field: any, key: any, props: any) {\n    const {render, classnames: cx, itemIndex} = props;\n    const data = this.props.data;\n    if (!isVisible(field, data)) {\n      return;\n    }\n\n    const $$id = field.$$id ? `${field.$$id}-field` : '';\n\n    return (\n      <div className={cx('Card-field')} key={key}>\n        {field && field.label ? (\n          <label className={cx('Card-fieldLabel', field.labelClassName)}>\n            {field.label}\n          </label>\n        ) : null}\n\n        {\n          render(\n            region,\n            {\n              ...field,\n              field: field,\n              $$id,\n              type: 'card-item-field'\n            },\n            {\n              className: cx('Card-fieldValue', field.className),\n              rowIndex: itemIndex,\n              colIndex: key,\n              value: field.name ? resolveVariable(field.name, data) : undefined,\n              popOverContainer: this.getPopOverContainer,\n              onAction: this.handleAction,\n              onQuickChange: this.handleQuickChange\n            }\n          ) as JSX.Element\n        }\n      </div>\n    );\n  }\n\n  renderBody() {\n    const {body} = this.props;\n\n    if (!body) {\n      return null;\n    }\n\n    if (Array.isArray(body)) {\n      return body.map((child, index) =>\n        this.renderChild(child, `body/${index}`, index)\n      );\n    }\n\n    return this.renderChild(body, 'body');\n  }\n\n  render() {\n    const {\n      className,\n      data,\n      header,\n      render,\n      bodyClassName,\n      highlightClassName,\n      titleClassName,\n      subTitleClassName,\n      descClassName,\n      checkOnItemClick,\n      avatarClassName,\n      checkable,\n      classnames: cx,\n      classPrefix: ns,\n      imageClassName,\n      avatarTextClassName\n    } = this.props;\n\n    let heading = null;\n\n    if (header) {\n      const {\n        highlight: highlightTpl,\n        avatar: avatarTpl,\n        avatarText: avatarTextTpl,\n        title: titleTpl,\n        subTitle: subTitleTpl,\n        subTitlePlaceholder,\n        desc: descTpl,\n        descPlaceholder\n      } = header;\n\n      const highlight = !!evalExpression(highlightTpl, data as object);\n      const avatar = filter(avatarTpl, data, '| raw');\n      const avatarText = filter(avatarTextTpl, data);\n      const title = filter(titleTpl, data);\n      const subTitle = filter(subTitleTpl, data);\n      const desc = filter(descTpl, data);\n\n      heading = (\n        <div className={cx('Card-heading', header.className)}>\n          {avatar ? (\n            <span\n              className={cx(\n                'Card-avtar',\n                header.avatarClassName || avatarClassName\n              )}\n            >\n              <img\n                className={cx(\n                  'Card-img',\n                  header.imageClassName || imageClassName\n                )}\n                src={avatar}\n              />\n            </span>\n          ) : avatarText ? (\n            <span\n              className={cx(\n                'Card-avtarText',\n                header.avatarTextClassName || avatarTextClassName\n              )}\n            >\n              {avatarText}\n            </span>\n          ) : null}\n          <div className={cx('Card-meta')}>\n            {highlight ? (\n              <i\n                className={cx(\n                  'Card-highlight',\n                  header.highlightClassName || highlightClassName\n                )}\n              />\n            ) : null}\n\n            {title ? (\n              <div\n                className={cx(\n                  'Card-title',\n                  header.titleClassName || titleClassName\n                )}\n              >\n                {render('title', title)}\n              </div>\n            ) : null}\n\n            {subTitle || subTitlePlaceholder ? (\n              <div\n                className={cx(\n                  'Card-subTitle',\n                  header.subTitleClassName || subTitleClassName\n                )}\n              >\n                {render('sub-title', subTitle || subTitlePlaceholder, {\n                  className: cx(!subTitle ? 'Card-placeholder' : undefined)\n                })}\n              </div>\n            ) : null}\n\n            {desc || descPlaceholder ? (\n              <div\n                className={cx(\n                  'Card-desc',\n                  header.descClassName || descClassName\n                )}\n              >\n                {render('desc', desc || descPlaceholder, {\n                  className: !desc ? 'text-muted' : undefined\n                })}\n              </div>\n            ) : null}\n          </div>\n        </div>\n      );\n    }\n\n    const body = this.renderBody();\n\n    return (\n      <div\n        onClick={checkOnItemClick && checkable ? this.handleClick : undefined}\n        className={cx('Card', className)}\n      >\n        {this.renderToolbar()}\n        {heading}\n        {body ? (\n          <div className={cx('Card-body', bodyClassName)}>{body}</div>\n        ) : null}\n        {this.renderActions()}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)card$/,\n  name: 'card'\n})\nexport class CardRenderer extends Card {}\n\n@Renderer({\n  test: /(^|\\/)card-item-field$/,\n  name: 'card-item'\n})\n@QuickEdit()\n@PopOver()\n@Copyable()\nexport class CardItemFieldRenderer extends TableCell {\n  static defaultProps = {\n    ...TableCell.defaultProps,\n    wrapperComponent: 'div'\n  };\n\n  static propsList = [\n    'quickEdit',\n    'quickEditEnabledOn',\n    'popOver',\n    'copyable',\n    'inline',\n    ...TableCell.propsList\n  ];\n\n  render() {\n    let {\n      type,\n      className,\n      render,\n      style,\n      wrapperComponent: Component,\n      labelClassName,\n      value,\n      data,\n      children,\n      width,\n      innerClassName,\n      label,\n      tabIndex,\n      onKeyUp,\n      field,\n      ...rest\n    } = this.props;\n\n    const schema = {\n      ...field,\n      className: innerClassName,\n      type: (field && field.type) || 'plain'\n    };\n\n    let body = children\n      ? children\n      : render('field', schema, {\n          ...rest,\n          value,\n          data\n        });\n\n    if (width) {\n      style = style || {};\n      style.width = style.width || width;\n      body = (\n        <div style={{width: !/%/.test(String(width)) ? width : ''}}>{body}</div>\n      );\n    }\n\n    if (!Component) {\n      return body as JSX.Element;\n    }\n\n    return (\n      <Component\n        style={style}\n        className={className}\n        tabIndex={tabIndex}\n        onKeyUp={onKeyUp}\n      >\n        {body}\n      </Component>\n    );\n  }\n}\n"
    ]
}