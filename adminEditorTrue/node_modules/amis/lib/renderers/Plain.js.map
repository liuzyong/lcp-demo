{
    "version": 3,
    "file": "Plain.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Plain.tsx"
    ],
    "names": [],
    "mappings": ";;;AAAA,wDAA0B;AAC1B,sCAAmD;AACnD,oCAAoC;AAapC;IAA2B,iCAAmC;IAA9D;;IAkCA,CAAC;IA3BC,sBAAM,GAAN;QACQ,IAAA,eAUQ,EATZ,wBAAS,EACT,sCAAgB,EAChB,gBAAK,EACL,cAAI,EACJ,cAAI,EACJ,YAAG,EACH,kBAAM,EACN,4BAAW,EACX,kBACY,CAAC;QAEf,IAAM,SAAS,GAAG,gBAAgB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAEhE,OAAO,CACL,8BAAC,SAAS,IAAC,SAAS,EAAE,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,IAC9C,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CACb,YAAM,CAAC,GAAG,IAAK,IAAe,EAAE,IAAI,CAAC,CACtC,CAAC,CAAC,CAAC,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,CACnE,wCAAM,SAAS,EAAC,YAAY,IAAE,WAAW,CAAQ,CAClD,CAAC,CAAC,CAAC,CACF,MAAM,CAAC,KAAK,CAAC,CACd,CACS,CACb,CAAC;IACJ,CAAC;IAhCM,kBAAY,GAAwB;QACzC,gBAAgB,EAAE,EAAE;QACpB,MAAM,EAAE,IAAI;QACZ,WAAW,EAAE,GAAG;KACjB,CAAC;IA6BJ,YAAC;CAAA,AAlCD,CAA2B,eAAK,CAAC,SAAS,GAkCzC;AAlCY,sBAAK;AAwClB;IAAmC,yCAAK;IAAxC;;IAA0C,CAAC;IAA9B,aAAa;QAJzB,kBAAQ,CAAC;YACR,IAAI,EAAE,uBAAuB;YAC7B,IAAI,EAAE,OAAO;SACd,CAAC;OACW,aAAa,CAAiB;IAAD,oBAAC;CAAA,AAA3C,CAAmC,KAAK,GAAG;AAA9B,sCAAa",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {filter} from '../utils/tpl';\nimport cx from 'classnames';\n\nexport interface PlainProps extends RendererProps {\n  className?: string;\n  tpl?: string;\n  html?: string;\n  text?: string;\n  raw?: string;\n  wrapperComponent?: any;\n  inline?: boolean;\n}\n\nexport class Plain extends React.Component<PlainProps, object> {\n  static defaultProps: Partial<PlainProps> = {\n    wrapperComponent: '',\n    inline: true,\n    placeholder: '-'\n  };\n\n  render() {\n    const {\n      className,\n      wrapperComponent,\n      value,\n      text,\n      data,\n      tpl,\n      inline,\n      placeholder,\n      classnames: cx\n    } = this.props;\n\n    const Component = wrapperComponent || (inline ? 'span' : 'div');\n\n    return (\n      <Component className={cx('PlainField', className)}>\n        {tpl || text ? (\n          filter(tpl || (text as string), data)\n        ) : typeof value === 'undefined' || value === '' || value === null ? (\n          <span className=\"text-muted\">{placeholder}</span>\n        ) : (\n          String(value)\n        )}\n      </Component>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)(?:plain|text)$/,\n  name: 'plain'\n})\nexport class PlainRenderer extends Plain {}\n"
    ]
}