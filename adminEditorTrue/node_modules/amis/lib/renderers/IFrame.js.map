{
    "version": 3,
    "file": "IFrame.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/IFrame.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {filter} from '../utils/tpl';\nimport {autobind, createObject} from '../utils/helper';\nimport {ScopedContext, IScopedContext} from '../Scoped';\nimport {buildApi} from '../utils/api';\n\nexport interface IFrameProps extends RendererProps {\n  className?: string;\n  src?: string;\n  events?: {\n    [eventName: string]: Object;\n  };\n}\n\nexport default class IFrame extends React.Component<IFrameProps, object> {\n  IFrameRef: React.RefObject<HTMLIFrameElement> = React.createRef();\n  static propsList: Array<string> = ['src', 'className'];\n  static defaultProps: Partial<IFrameProps> = {\n    className: '',\n    frameBorder: 0\n  };\n\n  state = {\n    width: this.props.width || '100%',\n    height: this.props.height || '100%'\n  };\n\n  componentDidMount() {\n    window.addEventListener('message', this.onMessage);\n  }\n\n  componentDidUpdate(prevProps: IFrameProps) {\n    const data = this.props.data;\n\n    if (data !== prevProps.data) {\n      this.postMessage('update', data);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('message', this.onMessage);\n  }\n\n  @autobind\n  onMessage(e: MessageEvent) {\n    const {events, onAction, data} = this.props;\n\n    if (!e.data || e.data === '' || !events) {\n      return;\n    }\n\n    const [prefix, type] = e.data.type.split(':');\n\n    if (prefix !== 'amis' || !type) {\n      return;\n    }\n\n    if (type === 'resize' && e.data.data) {\n      this.setState({\n        width: e.data.data.width || '100%',\n        height: e.data.data.height || '100%'\n      });\n    } else {\n      const action = events[type];\n      action && onAction(e, action, createObject(data, e.data.data));\n    }\n  }\n\n  @autobind\n  onLoad() {\n    const {src, data} = this.props;\n    src && this.postMessage('init', data);\n  }\n\n  // 当别的组件通知 iframe reload 的时候执行。\n  @autobind\n  reload(subpath?: any, query?: any) {\n    if (query) {\n      return this.receive(query);\n    }\n\n    const {src, data} = this.props;\n\n    if (src) {\n      (this.IFrameRef.current as HTMLIFrameElement).src = buildApi(\n        src,\n        data\n      ).url;\n    }\n  }\n\n  // 当别的组件把数据发给 iframe 里面的时候执行。\n  @autobind\n  receive(values: object) {\n    const {src, data} = this.props;\n\n    if (src) {\n      (this.IFrameRef.current as HTMLIFrameElement).src = buildApi(\n        src,\n        createObject(data, values)\n      ).url;\n\n      this.postMessage('receive', createObject(data, values));\n    }\n  }\n\n  @autobind\n  postMessage(type: string, data: any) {\n    (this.IFrameRef.current as HTMLIFrameElement).contentWindow?.postMessage(\n      {\n        type: `amis:${type}`,\n        data\n      },\n      '*'\n    );\n  }\n\n  render() {\n    const {width, height} = this.state;\n    let {className, src, frameBorder, data, style} = this.props;\n\n    style = {\n      ...style\n    };\n\n    width !== void 0 && (style.width = width);\n    height !== void 0 && (style.height = height);\n\n    return (\n      <iframe\n        className={className}\n        frameBorder={frameBorder}\n        style={style}\n        ref={this.IFrameRef}\n        onLoad={this.onLoad}\n        src={src ? buildApi(src, data).url : undefined}\n      />\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)iframe$/,\n  name: 'iframe'\n})\nexport class IFrameRenderer extends IFrame {\n  static contextType = ScopedContext;\n\n  componentWillMount() {\n    const scoped = this.context as IScopedContext;\n    scoped.registerComponent(this);\n  }\n\n  componentWillUnmount() {\n    const scoped = this.context as IScopedContext;\n    scoped.unRegisterComponent(this);\n  }\n}\n"
    ]
}