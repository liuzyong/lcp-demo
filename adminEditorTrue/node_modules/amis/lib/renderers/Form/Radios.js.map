{
    "version": 3,
    "file": "Radios.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Radios.tsx"
    ],
    "names": [],
    "mappings": ";;;AAAA,wDAA0B;AAE1B,kEAA4B;AAC5B,2EAA6C;AAC7C,qCAAsE;AACtE,6CAAqD;AACrD,uDAAoD;AASpD;IAA2C,yCAAiC;IAA5E;;IA0EA,CAAC;IApEC,oCAAY,GAAZ,UAAa,MAAc;QACnB,IAAA,eAOQ,EANZ,0BAAU,EACV,8BAAY,EACZ,0BAAU,EACV,sBAAQ,EACR,sBAAQ,EACR,8BACY,CAAC;QAEf,IAAM,MAAM,GACV,QAAQ,IAAI,CAAC,gBAAO,CAAC,QAAQ,CAAC,IAAI,yBAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAClE,MAAM,IAAI,YAAY,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;QAE/C,IAAI,MAAM,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC,EAAE;YAC1C,MAAM,GAAG,MAAM,CAAC,UAAU,IAAI,OAAO,CAAC,CAAC;SACxC;QAED,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED,8BAAM,GAAN;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QACxC,MAAM,IAAI,MAAM,EAAE,CAAC;IACrB,CAAC;IAED,8BAAM,GAAN;QACQ,IAAA,eAmBQ,EAlBZ,wBAAS,EACT,mBAAe,EACf,gBAAK,EACL,sBAAQ,EACR,sBAAQ,EACR,0BAAU,EACV,8BAAY,EACZ,wBAAS,EACT,4BAAW,EACX,oBAAO,EACP,kBAAM,EACN,sBAAQ,EACR,8BAAY,EACZ,4BAAW,EACX,gCAAa,EACb,kCAAc,EACd,0BAAU,EACV,iBACY,CAAC;QAEf,OAAO,CACL,8BAAC,gBAAM,IACL,MAAM,EAAE,MAAM,IAAI,QAAQ,KAAK,QAAQ,EACvC,SAAS,EAAE,oBAAE,CAAI,EAAE,kBAAe,EAAE,SAAS,CAAC,EAC9C,KAAK,EAAE,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EAClE,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,UAAU,EAAE,UAAU,EACtB,YAAY,EAAE,YAAa,EAC3B,SAAS,EAAE,SAAU,EACrB,cAAc,EAAE,cAAc,EAC9B,UAAU,EAAE,UAAU,EACtB,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC,EAC5B,OAAO,EAAE,OAAO,EAChB,YAAY,EAAE,YAAY,EAC1B,WAAW,EAAE,WAAW,EACxB,aAAa,EAAE,aAAa,GAC5B,CACH,CAAC;IACJ,CAAC;;IAxEM,0BAAY,GAAyB;QAC1C,YAAY,EAAE,CAAC;KAChB,CAAC;IAGF;QADC,iBAAQ;;qEACY,gBAAM,oBAAN,gBAAM;;qDAmB1B;IAiDH,oBAAC;CAAA,AA1ED,CAA2C,eAAK,CAAC,SAAS,GA0EzD;kBA1EoB,aAAa;AAgFlC;IAA2C,iDAAa;IAAxD;;IAIA,CAAC;IAHQ,kCAAY,GAAG;QACpB,QAAQ,EAAE,KAAK;KAChB,CAAC;IAHS,qBAAqB;QAJjC,wBAAc,CAAC;YACd,IAAI,EAAE,QAAQ;YACd,WAAW,EAAE,KAAK;SACnB,CAAC;OACW,qBAAqB,CAIjC;IAAD,4BAAC;CAAA,AAJD,CAA2C,aAAa,GAIvD;AAJY,sDAAqB",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps} from './Item';\nimport cx from 'classnames';\nimport Radios from '../../components/Radios';\nimport {OptionsControl, OptionsControlProps, Option} from './Options';\nimport {autobind, isEmpty} from '../../utils/helper';\nimport {dataMapping} from '../../utils/tpl-builtin';\n\nexport interface RadiosProps extends OptionsControlProps {\n  placeholder?: any;\n  columnsCount?: number;\n  labelClassName?: string;\n  labelField?: string;\n}\n\nexport default class RadiosControl extends React.Component<RadiosProps, any> {\n  static defaultProps: Partial<RadiosProps> = {\n    columnsCount: 1\n  };\n\n  @autobind\n  handleChange(option: Option) {\n    const {\n      joinValues,\n      extractValue,\n      valueField,\n      onChange,\n      autoFill,\n      onBulkChange\n    } = this.props;\n\n    const sendTo =\n      autoFill && !isEmpty(autoFill) && dataMapping(autoFill, option);\n    sendTo && onBulkChange && onBulkChange(sendTo);\n\n    if (option && (joinValues || extractValue)) {\n      option = option[valueField || 'value'];\n    }\n\n    onChange && onChange(option);\n  }\n\n  reload() {\n    const reload = this.props.reloadOptions;\n    reload && reload();\n  }\n\n  render() {\n    const {\n      className,\n      classPrefix: ns,\n      value,\n      onChange,\n      disabled,\n      joinValues,\n      extractValue,\n      delimiter,\n      placeholder,\n      options,\n      inline,\n      formMode,\n      columnsCount,\n      classPrefix,\n      itemClassName,\n      labelClassName,\n      labelField,\n      translate: __\n    } = this.props;\n\n    return (\n      <Radios\n        inline={inline || formMode === 'inline'}\n        className={cx(`${ns}RadiosControl`, className)}\n        value={typeof value === 'undefined' || value === null ? '' : value}\n        disabled={disabled}\n        onChange={this.handleChange}\n        joinValues={joinValues}\n        extractValue={extractValue!}\n        delimiter={delimiter!}\n        labelClassName={labelClassName}\n        labelField={labelField}\n        placeholder={__(placeholder)}\n        options={options}\n        columnsCount={columnsCount}\n        classPrefix={classPrefix}\n        itemClassName={itemClassName}\n      />\n    );\n  }\n}\n\n@OptionsControl({\n  type: 'radios',\n  sizeMutable: false\n})\nexport class RadiosControlRenderer extends RadiosControl {\n  static defaultProps = {\n    multiple: false\n  };\n}\n"
    ]
}