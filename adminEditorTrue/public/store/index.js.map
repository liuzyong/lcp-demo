{"version":3,"sources":["/store/index.ts"],"names":[],"mappings":";;;;;;AAAA,mDAA0E;AAC1E,+BAAiC;AACjC,6BAAoC;AACpC,IAAI,QAAQ,GAAG,CAAC,CAAC;AACJ,iBAAS,GAAG,uBAAK;KACzB,KAAK,CAAC,WAAW,EAAE;IAChB,KAAK,EAAE,uBAAK,CAAC,QAAQ,CAAC,uBAAK,CAAC,KAAK,CAAC,gBAAS,CAAC,EAAE;QAC1C;YACI,EAAE,EAAE,KAAG,QAAU;YACjB,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,cAAc;YACrB,IAAI,EAAE,YAAY;YAClB,MAAM,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,mBAAmB;gBAC1B,IAAI,EAAE,WAAW;aACpB;SACJ;KACJ,CAAC;IACF,KAAK,EAAE,SAAS;IAChB,UAAU,EAAE,IAAI;IAChB,WAAW,EAAE,KAAK;IAClB,SAAS,EAAE,KAAK;IAChB,aAAa,EAAE,KAAK;IACpB,cAAc,EAAE,KAAK;IACrB,OAAO,EAAE,KAAK;IACd,MAAM,EAAE,uBAAK,CAAC,MAAM,EAAE;CACzB,CAAC;KACD,KAAK,CAAC,cAAI,IAAI,QAAC;IACZ,IAAI,OAAO;QACP,OAAO,wBAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;IAChC,CAAC;IACD,IAAI,MAAM;QACN,OAAO,wBAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;IAC/B,CAAC;IACD,IAAI,KAAK;QACL,OAAO,wBAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;IAC9B,CAAC;IACD,IAAI,IAAI;QACJ,OAAO,wBAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;IAC7B,CAAC;CACJ,CAAC,EAba,CAab,CAAC;KACF,OAAO,CAAC,cAAI;IACT,SAAS,iBAAiB;QACtB,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;IACzC,CAAC;IAED,SAAS,gBAAgB;QACrB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACvC,CAAC;IAED,SAAS,eAAe;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACrC,CAAC;IAED,SAAS,gBAAgB,CAAC,QAAiB;QACvC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;IAClC,CAAC;IAED,SAAS,iBAAiB,CAAC,QAAiB;QACxC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;IAClC,CAAC;IACD,SAAS,OAAO,CAAC,IAAgE;QAC7E,IAAI,CAAC,KAAK,CAAC,IAAI,CACX,gBAAS,CAAC,MAAM,uCACT,IAAI,KACP,EAAE,EAAE,KAAG,EAAE,QAAU,IACrB,CACL,CAAC;IACN,CAAC;IAED,SAAS,YAAY,CAAC,KAAa;QAC/B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,SAAS,kBAAkB,CAAC,KAAa;QACrC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC;IAED,SAAS,YAAY,CAAC,KAAU;QAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,SAAS,UAAU,CAAC,KAAc;QAC9B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,OAAO;QACH,iBAAiB;QACjB,gBAAgB;QAChB,eAAe;QACf,gBAAgB;QAChB,iBAAiB;QACjB,OAAO;QACP,YAAY;QACZ,kBAAkB;QAClB,YAAY;QACZ,UAAU;QACV,WAAW;YACP,gBAAgB;YAChB,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,YAAY,EAAE;gBACtD,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACvD,IAAI,SAAS;oBAAE,+BAAa,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;gBAE1D,eAAQ,CACJ,cAAM,oCAAW,CAAC,IAAI,CAAC,EAAjB,CAAiB,EACvB,cAAI;oBACA,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/D,CAAC,CACJ,CAAC;aACL;QACL,CAAC;KACJ,CAAC;AACN,CAAC,CAAC,CAAC","file":"index.js","sourcesContent":["import {types, getEnv, applySnapshot, getSnapshot} from 'mobx-state-tree';\r\nimport {PageStore} from './Page';\r\nimport {when, reaction} from 'mobx';\r\nlet pagIndex = 1;\r\nexport const MainStore = types\r\n    .model('MainStore', {\r\n        pages: types.optional(types.array(PageStore), [\r\n            {\r\n                id: `${pagIndex}`,\r\n                path: 'home',\r\n                label: 'This is Home',\r\n                icon: 'fa fa-file',\r\n                schema: {\r\n                    type: 'page',\r\n                    title: 'Hello world-store',\r\n                    body: '初始页面store'\r\n                }\r\n            }\r\n        ]),\r\n        theme: 'default',\r\n        asideFixed: true,\r\n        asideFolded: false,\r\n        offScreen: false,\r\n        addPageIsOpen: false,\r\n        editPageIsOpen: false,\r\n        preview: false,\r\n        schema: types.frozen()\r\n    })\r\n    .views(self => ({\r\n        get fetcher() {\r\n            return getEnv(self).fetcher;\r\n        },\r\n        get notify() {\r\n            return getEnv(self).notify;\r\n        },\r\n        get alert() {\r\n            return getEnv(self).alert;\r\n        },\r\n        get copy() {\r\n            return getEnv(self).copy;\r\n        }\r\n    }))\r\n    .actions(self => {\r\n        function toggleAsideFolded() {\r\n            self.asideFolded = !self.asideFolded;\r\n        }\r\n\r\n        function toggleAsideFixed() {\r\n            self.asideFixed = !self.asideFixed;\r\n        }\r\n\r\n        function toggleOffScreen() {\r\n            self.offScreen = !self.offScreen;\r\n        }\r\n\r\n        function setAddPageIsOpen(isOpened: boolean) {\r\n            self.addPageIsOpen = isOpened;\r\n        }\r\n\r\n        function setEditPageIsOpen(isOpened: boolean) {\r\n            self.addPageIsOpen = isOpened;\r\n        }\r\n        function addPage(data: {label: string; path: string; icon?: string; schema?: any}) {\r\n            self.pages.push(\r\n                PageStore.create({\r\n                    ...data,\r\n                    id: `${++pagIndex}`\r\n                })\r\n            );\r\n        }\r\n\r\n        function removePageAt(index: number) {\r\n            self.pages.splice(index, 1);\r\n        }\r\n\r\n        function updatePageSchemaAt(index: number) {\r\n            self.pages[index].updateSchema(self.schema);\r\n        }\r\n\r\n        function updateSchema(value: any) {\r\n            self.schema = value;\r\n        }\r\n\r\n        function setPreview(value: boolean) {\r\n            self.preview = value;\r\n        }\r\n\r\n        return {\r\n            toggleAsideFolded,\r\n            toggleAsideFixed,\r\n            toggleOffScreen,\r\n            setAddPageIsOpen,\r\n            setEditPageIsOpen,\r\n            addPage,\r\n            removePageAt,\r\n            updatePageSchemaAt,\r\n            updateSchema,\r\n            setPreview,\r\n            afterCreate() {\r\n                // persist store\r\n                if (typeof window !== 'undefined' && window.localStorage) {\r\n                    const storeData = window.localStorage.getItem('store');\r\n                    if (storeData) applySnapshot(self, JSON.parse(storeData));\r\n\r\n                    reaction(\r\n                        () => getSnapshot(self),\r\n                        json => {\r\n                            window.localStorage.setItem('store', JSON.stringify(json));\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        };\r\n    });\r\n\r\nexport type IMainStore = typeof MainStore.Type;\r\n"]}