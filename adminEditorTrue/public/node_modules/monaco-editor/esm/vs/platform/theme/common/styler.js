define('node_modules/monaco-editor/esm/vs/platform/theme/common/styler', function(require, exports, module) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.attachMenuStyler = exports.defaultMenuStyles = exports.defaultListStyles = exports.attachListStyler = exports.attachQuickOpenStyler = exports.attachBadgeStyler = exports.attachStyler = exports.computeStyles = void 0;
  /*---------------------------------------------------------------------------------------------
   *  Copyright (c) Microsoft Corporation. All rights reserved.
   *  Licensed under the MIT License. See License.txt in the project root for license information.
   *--------------------------------------------------------------------------------------------*/
  var __assign = (this && this.__assign) || function () {
      __assign = Object.assign || function (t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
              s = arguments[i];
              for (var p in s)
                  if (Object.prototype.hasOwnProperty.call(s, p))
                      t[p] = s[p];
          }
          return t;
      };
      return __assign.apply(this, arguments);
  };
  var colorRegistry_js_1 = require("node_modules/monaco-editor/esm/vs/platform/theme/common/colorRegistry");
  var objects_js_1 = require("node_modules/monaco-editor/esm/vs/base/common/objects");
  function computeStyles(theme, styleMap) {
      var styles = Object.create(null);
      for (var key in styleMap) {
          var value = styleMap[key];
          if (typeof value === 'string') {
              styles[key] = theme.getColor(value);
          }
          else if (typeof value === 'function') {
              styles[key] = value(theme);
          }
      }
      return styles;
  }
  exports.computeStyles = computeStyles;
  function attachStyler(themeService, styleMap, widgetOrCallback) {
      function applyStyles(theme) {
          var styles = computeStyles(themeService.getTheme(), styleMap);
          if (typeof widgetOrCallback === 'function') {
              widgetOrCallback(styles);
          }
          else {
              widgetOrCallback.style(styles);
          }
      }
      applyStyles(themeService.getTheme());
      return themeService.onThemeChange(applyStyles);
  }
  exports.attachStyler = attachStyler;
  function attachBadgeStyler(widget, themeService, style) {
      return attachStyler(themeService, {
          badgeBackground: (style && style.badgeBackground) || colorRegistry_js_1.badgeBackground,
          badgeForeground: (style && style.badgeForeground) || colorRegistry_js_1.badgeForeground,
          badgeBorder: colorRegistry_js_1.contrastBorder
      }, widget);
  }
  exports.attachBadgeStyler = attachBadgeStyler;
  function attachQuickOpenStyler(widget, themeService, style) {
      return attachStyler(themeService, {
          foreground: (style && style.foreground) || colorRegistry_js_1.foreground,
          background: (style && style.background) || colorRegistry_js_1.editorBackground,
          borderColor: style && style.borderColor || colorRegistry_js_1.contrastBorder,
          widgetShadow: style && style.widgetShadow || colorRegistry_js_1.widgetShadow,
          progressBarBackground: style && style.progressBarBackground || colorRegistry_js_1.progressBarBackground,
          pickerGroupForeground: style && style.pickerGroupForeground || colorRegistry_js_1.pickerGroupForeground,
          pickerGroupBorder: style && style.pickerGroupBorder || colorRegistry_js_1.pickerGroupBorder,
          inputBackground: (style && style.inputBackground) || colorRegistry_js_1.inputBackground,
          inputForeground: (style && style.inputForeground) || colorRegistry_js_1.inputForeground,
          inputBorder: (style && style.inputBorder) || colorRegistry_js_1.inputBorder,
          inputValidationInfoBorder: (style && style.inputValidationInfoBorder) || colorRegistry_js_1.inputValidationInfoBorder,
          inputValidationInfoBackground: (style && style.inputValidationInfoBackground) || colorRegistry_js_1.inputValidationInfoBackground,
          inputValidationInfoForeground: (style && style.inputValidationInfoForeground) || colorRegistry_js_1.inputValidationInfoForeground,
          inputValidationWarningBorder: (style && style.inputValidationWarningBorder) || colorRegistry_js_1.inputValidationWarningBorder,
          inputValidationWarningBackground: (style && style.inputValidationWarningBackground) || colorRegistry_js_1.inputValidationWarningBackground,
          inputValidationWarningForeground: (style && style.inputValidationWarningForeground) || colorRegistry_js_1.inputValidationWarningForeground,
          inputValidationErrorBorder: (style && style.inputValidationErrorBorder) || colorRegistry_js_1.inputValidationErrorBorder,
          inputValidationErrorBackground: (style && style.inputValidationErrorBackground) || colorRegistry_js_1.inputValidationErrorBackground,
          inputValidationErrorForeground: (style && style.inputValidationErrorForeground) || colorRegistry_js_1.inputValidationErrorForeground,
          listFocusBackground: (style && style.listFocusBackground) || colorRegistry_js_1.listFocusBackground,
          listFocusForeground: (style && style.listFocusForeground) || colorRegistry_js_1.listFocusForeground,
          listActiveSelectionBackground: (style && style.listActiveSelectionBackground) || colorRegistry_js_1.darken(colorRegistry_js_1.listActiveSelectionBackground, 0.1),
          listActiveSelectionForeground: (style && style.listActiveSelectionForeground) || colorRegistry_js_1.listActiveSelectionForeground,
          listFocusAndSelectionBackground: style && style.listFocusAndSelectionBackground || colorRegistry_js_1.listActiveSelectionBackground,
          listFocusAndSelectionForeground: (style && style.listFocusAndSelectionForeground) || colorRegistry_js_1.listActiveSelectionForeground,
          listInactiveSelectionBackground: (style && style.listInactiveSelectionBackground) || colorRegistry_js_1.listInactiveSelectionBackground,
          listInactiveSelectionForeground: (style && style.listInactiveSelectionForeground) || colorRegistry_js_1.listInactiveSelectionForeground,
          listInactiveFocusBackground: (style && style.listInactiveFocusBackground) || colorRegistry_js_1.listInactiveFocusBackground,
          listHoverBackground: (style && style.listHoverBackground) || colorRegistry_js_1.listHoverBackground,
          listHoverForeground: (style && style.listHoverForeground) || colorRegistry_js_1.listHoverForeground,
          listDropBackground: (style && style.listDropBackground) || colorRegistry_js_1.listDropBackground,
          listFocusOutline: (style && style.listFocusOutline) || colorRegistry_js_1.activeContrastBorder,
          listSelectionOutline: (style && style.listSelectionOutline) || colorRegistry_js_1.activeContrastBorder,
          listHoverOutline: (style && style.listHoverOutline) || colorRegistry_js_1.activeContrastBorder
      }, widget);
  }
  exports.attachQuickOpenStyler = attachQuickOpenStyler;
  function attachListStyler(widget, themeService, overrides) {
      return attachStyler(themeService, objects_js_1.mixin(overrides || Object.create(null), exports.defaultListStyles, false), widget);
  }
  exports.attachListStyler = attachListStyler;
  exports.defaultListStyles = {
      listFocusBackground: colorRegistry_js_1.listFocusBackground,
      listFocusForeground: colorRegistry_js_1.listFocusForeground,
      listActiveSelectionBackground: colorRegistry_js_1.darken(colorRegistry_js_1.listActiveSelectionBackground, 0.1),
      listActiveSelectionForeground: colorRegistry_js_1.listActiveSelectionForeground,
      listFocusAndSelectionBackground: colorRegistry_js_1.listActiveSelectionBackground,
      listFocusAndSelectionForeground: colorRegistry_js_1.listActiveSelectionForeground,
      listInactiveSelectionBackground: colorRegistry_js_1.listInactiveSelectionBackground,
      listInactiveSelectionForeground: colorRegistry_js_1.listInactiveSelectionForeground,
      listInactiveFocusBackground: colorRegistry_js_1.listInactiveFocusBackground,
      listHoverBackground: colorRegistry_js_1.listHoverBackground,
      listHoverForeground: colorRegistry_js_1.listHoverForeground,
      listDropBackground: colorRegistry_js_1.listDropBackground,
      listFocusOutline: colorRegistry_js_1.activeContrastBorder,
      listSelectionOutline: colorRegistry_js_1.activeContrastBorder,
      listHoverOutline: colorRegistry_js_1.activeContrastBorder,
      listFilterWidgetBackground: colorRegistry_js_1.listFilterWidgetBackground,
      listFilterWidgetOutline: colorRegistry_js_1.listFilterWidgetOutline,
      listFilterWidgetNoMatchesOutline: colorRegistry_js_1.listFilterWidgetNoMatchesOutline,
      listMatchesShadow: colorRegistry_js_1.widgetShadow
  };
  exports.defaultMenuStyles = {
      shadowColor: colorRegistry_js_1.widgetShadow,
      borderColor: colorRegistry_js_1.menuBorder,
      foregroundColor: colorRegistry_js_1.menuForeground,
      backgroundColor: colorRegistry_js_1.menuBackground,
      selectionForegroundColor: colorRegistry_js_1.menuSelectionForeground,
      selectionBackgroundColor: colorRegistry_js_1.menuSelectionBackground,
      selectionBorderColor: colorRegistry_js_1.menuSelectionBorder,
      separatorColor: colorRegistry_js_1.menuSeparatorBackground
  };
  function attachMenuStyler(widget, themeService, style) {
      return attachStyler(themeService, __assign({}, exports.defaultMenuStyles, style), widget);
  }
  exports.attachMenuStyler = attachMenuStyler;
  

});
