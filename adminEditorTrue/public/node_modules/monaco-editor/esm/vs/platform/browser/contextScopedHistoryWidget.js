define('node_modules/monaco-editor/esm/vs/platform/browser/contextScopedHistoryWidget', function(require, exports, module) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.ContextScopedFindInput = exports.ContextScopedHistoryInputBox = exports.createAndBindHistoryNavigationWidgetScopedContextKeyService = exports.HistoryNavigationEnablementContext = exports.HistoryNavigationWidgetContext = void 0;
  /*---------------------------------------------------------------------------------------------
   *  Copyright (c) Microsoft Corporation. All rights reserved.
   *  Licensed under the MIT License. See License.txt in the project root for license information.
   *--------------------------------------------------------------------------------------------*/
  var __extends = (this && this.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b)
                  if (b.hasOwnProperty(p))
                      d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r = Reflect.decorate(decorators, target, key, desc);
      else
          for (var i = decorators.length - 1; i >= 0; i--)
              if (d = decorators[i])
                  r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var __param = (this && this.__param) || function (paramIndex, decorator) {
      return function (target, key) { decorator(target, key, paramIndex); };
  };
  var contextkey_js_1 = require("node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkey");
  var inputBox_js_1 = require("node_modules/monaco-editor/esm/vs/base/browser/ui/inputbox/inputBox");
  var findInput_js_1 = require("node_modules/monaco-editor/esm/vs/base/browser/ui/findinput/findInput");
  var keybindingsRegistry_js_1 = require("node_modules/monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry");
  exports.HistoryNavigationWidgetContext = 'historyNavigationWidget';
  exports.HistoryNavigationEnablementContext = 'historyNavigationEnabled';
  function bindContextScopedWidget(contextKeyService, widget, contextKey) {
      new contextkey_js_1.RawContextKey(contextKey, widget).bindTo(contextKeyService);
  }
  function createWidgetScopedContextKeyService(contextKeyService, widget) {
      return contextKeyService.createScoped(widget.target);
  }
  function getContextScopedWidget(contextKeyService, contextKey) {
      return contextKeyService.getContext(document.activeElement).getValue(contextKey);
  }
  function createAndBindHistoryNavigationWidgetScopedContextKeyService(contextKeyService, widget) {
      var scopedContextKeyService = createWidgetScopedContextKeyService(contextKeyService, widget);
      bindContextScopedWidget(scopedContextKeyService, widget, exports.HistoryNavigationWidgetContext);
      var historyNavigationEnablement = new contextkey_js_1.RawContextKey(exports.HistoryNavigationEnablementContext, true).bindTo(scopedContextKeyService);
      return { scopedContextKeyService: scopedContextKeyService, historyNavigationEnablement: historyNavigationEnablement };
  }
  exports.createAndBindHistoryNavigationWidgetScopedContextKeyService = createAndBindHistoryNavigationWidgetScopedContextKeyService;
  var ContextScopedHistoryInputBox = /** @class */ (function (_super) {
      __extends(ContextScopedHistoryInputBox, _super);
      function ContextScopedHistoryInputBox(container, contextViewProvider, options, contextKeyService) {
          var _this = _super.call(this, container, contextViewProvider, options) || this;
          _this._register(createAndBindHistoryNavigationWidgetScopedContextKeyService(contextKeyService, { target: _this.element, historyNavigator: _this }).scopedContextKeyService);
          return _this;
      }
      ContextScopedHistoryInputBox = __decorate([
          __param(3, contextkey_js_1.IContextKeyService)
      ], ContextScopedHistoryInputBox);
      return ContextScopedHistoryInputBox;
  }(inputBox_js_1.HistoryInputBox));
  exports.ContextScopedHistoryInputBox = ContextScopedHistoryInputBox;
  var ContextScopedFindInput = /** @class */ (function (_super) {
      __extends(ContextScopedFindInput, _super);
      function ContextScopedFindInput(container, contextViewProvider, options, contextKeyService, showFindOptions) {
          if (showFindOptions === void 0) {
              showFindOptions = false;
          }
          var _this = _super.call(this, container, contextViewProvider, showFindOptions, options) || this;
          _this._register(createAndBindHistoryNavigationWidgetScopedContextKeyService(contextKeyService, { target: _this.inputBox.element, historyNavigator: _this.inputBox }).scopedContextKeyService);
          return _this;
      }
      ContextScopedFindInput = __decorate([
          __param(3, contextkey_js_1.IContextKeyService)
      ], ContextScopedFindInput);
      return ContextScopedFindInput;
  }(findInput_js_1.FindInput));
  exports.ContextScopedFindInput = ContextScopedFindInput;
  keybindingsRegistry_js_1.KeybindingsRegistry.registerCommandAndKeybindingRule({
      id: 'history.showPrevious',
      weight: 200 /* WorkbenchContrib */,
      when: contextkey_js_1.ContextKeyExpr.and(new contextkey_js_1.ContextKeyDefinedExpr(exports.HistoryNavigationWidgetContext), new contextkey_js_1.ContextKeyEqualsExpr(exports.HistoryNavigationEnablementContext, true)),
      primary: 16 /* UpArrow */,
      secondary: [512 /* Alt */ | 16 /* UpArrow */],
      handler: function (accessor, arg2) {
          var widget = getContextScopedWidget(accessor.get(contextkey_js_1.IContextKeyService), exports.HistoryNavigationWidgetContext);
          if (widget) {
              var historyInputBox = widget.historyNavigator;
              historyInputBox.showPreviousValue();
          }
      }
  });
  keybindingsRegistry_js_1.KeybindingsRegistry.registerCommandAndKeybindingRule({
      id: 'history.showNext',
      weight: 200 /* WorkbenchContrib */,
      when: new contextkey_js_1.ContextKeyAndExpr([new contextkey_js_1.ContextKeyDefinedExpr(exports.HistoryNavigationWidgetContext), new contextkey_js_1.ContextKeyEqualsExpr(exports.HistoryNavigationEnablementContext, true)]),
      primary: 18 /* DownArrow */,
      secondary: [512 /* Alt */ | 18 /* DownArrow */],
      handler: function (accessor, arg2) {
          var widget = getContextScopedWidget(accessor.get(contextkey_js_1.IContextKeyService), exports.HistoryNavigationWidgetContext);
          if (widget) {
              var historyInputBox = widget.historyNavigator;
              historyInputBox.showNextValue();
          }
      }
  });
  

});
