define('node_modules/monaco-editor/esm/vs/base/common/platform', function(require, exports, module) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.OS = exports.setImmediate = exports.globals = exports.isWeb = exports.isNative = exports.isLinux = exports.isMacintosh = exports.isWindows = void 0;
  /*---------------------------------------------------------------------------------------------
   *  Copyright (c) Microsoft Corporation. All rights reserved.
   *  Licensed under the MIT License. See License.txt in the project root for license information.
   *--------------------------------------------------------------------------------------------*/
  var LANGUAGE_DEFAULT = 'en';
  var _isWindows = false;
  var _isMacintosh = false;
  var _isLinux = false;
  var _isNative = false;
  var _isWeb = false;
  var _locale = undefined;
  var _language = LANGUAGE_DEFAULT;
  var _translationsConfigFile = undefined;
  var isElectronRenderer = ("undefined" !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');
  // OS detection
  if (typeof navigator === 'object' && !isElectronRenderer) {
      var userAgent = navigator.userAgent;
      _isWindows = userAgent.indexOf('Windows') >= 0;
      _isMacintosh = userAgent.indexOf('Macintosh') >= 0;
      _isLinux = userAgent.indexOf('Linux') >= 0;
      _isWeb = true;
      _locale = navigator.language;
      _language = _locale;
  }
  else if ("undefined" === 'object') {
      _isWindows = (process.platform === 'win32');
      _isMacintosh = (process.platform === 'darwin');
      _isLinux = (process.platform === 'linux');
      _locale = LANGUAGE_DEFAULT;
      _language = LANGUAGE_DEFAULT;
      var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];
      if (rawNlsConfig) {
          try {
              var nlsConfig = JSON.parse(rawNlsConfig);
              var resolved = nlsConfig.availableLanguages['*'];
              _locale = nlsConfig.locale;
              // VSCode's default language is 'en'
              _language = resolved ? resolved : LANGUAGE_DEFAULT;
              _translationsConfigFile = nlsConfig._translationsConfigFile;
          }
          catch (e) {
          }
      }
      _isNative = true;
  }
  var _platform = 0 /* Web */;
  if (_isNative) {
      if (_isMacintosh) {
          _platform = 1 /* Mac */;
      }
      else if (_isWindows) {
          _platform = 3 /* Windows */;
      }
      else if (_isLinux) {
          _platform = 2 /* Linux */;
      }
  }
  exports.isWindows = _isWindows;
  exports.isMacintosh = _isMacintosh;
  exports.isLinux = _isLinux;
  exports.isNative = _isNative;
  exports.isWeb = _isWeb;
  var _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});
  exports.globals = _globals;
  var _setImmediate = null;
  function setImmediate(callback) {
      if (_setImmediate === null) {
          if (exports.globals.setImmediate) {
              _setImmediate = exports.globals.setImmediate.bind(exports.globals);
          }
          else if ("undefined" !== 'undefined' && typeof process.nextTick === 'function') {
              _setImmediate = process.nextTick.bind(process);
          }
          else {
              _setImmediate = exports.globals.setTimeout.bind(exports.globals);
          }
      }
      return _setImmediate(callback);
  }
  exports.setImmediate = setImmediate;
  exports.OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));
  

});
