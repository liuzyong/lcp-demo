define('node_modules/monaco-editor/esm/vs/base/browser/ui/countBadge/countBadge', function(require, exports, module) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.CountBadge = void 0;
  /*---------------------------------------------------------------------------------------------
   *  Copyright (c) Microsoft Corporation. All rights reserved.
   *  Licensed under the MIT License. See License.txt in the project root for license information.
   *--------------------------------------------------------------------------------------------*/
  ''/*@require node_modules/monaco-editor/esm/vs/base/browser/ui/countBadge/countBadge.css*/;
  var dom_js_1 = require("node_modules/monaco-editor/esm/vs/base/browser/dom");
  var strings_js_1 = require("node_modules/monaco-editor/esm/vs/base/common/strings");
  var color_js_1 = require("node_modules/monaco-editor/esm/vs/base/common/color");
  var objects_js_1 = require("node_modules/monaco-editor/esm/vs/base/common/objects");
  var defaultOpts = {
      badgeBackground: color_js_1.Color.fromHex('#4D4D4D'),
      badgeForeground: color_js_1.Color.fromHex('#FFFFFF')
  };
  var CountBadge = /** @class */ (function () {
      function CountBadge(container, options) {
          this.options = options || Object.create(null);
          objects_js_1.mixin(this.options, defaultOpts, false);
          this.badgeBackground = this.options.badgeBackground;
          this.badgeForeground = this.options.badgeForeground;
          this.badgeBorder = this.options.badgeBorder;
          this.element = dom_js_1.append(container, dom_js_1.$('.monaco-count-badge'));
          this.countFormat = this.options.countFormat || '{0}';
          this.titleFormat = this.options.titleFormat || '';
          this.setCount(this.options.count || 0);
      }
      CountBadge.prototype.setCount = function (count) {
          this.count = count;
          this.render();
      };
      CountBadge.prototype.setTitleFormat = function (titleFormat) {
          this.titleFormat = titleFormat;
          this.render();
      };
      CountBadge.prototype.render = function () {
          this.element.textContent = strings_js_1.format(this.countFormat, this.count);
          this.element.title = strings_js_1.format(this.titleFormat, this.count);
          this.applyStyles();
      };
      CountBadge.prototype.style = function (styles) {
          this.badgeBackground = styles.badgeBackground;
          this.badgeForeground = styles.badgeForeground;
          this.badgeBorder = styles.badgeBorder;
          this.applyStyles();
      };
      CountBadge.prototype.applyStyles = function () {
          if (this.element) {
              var background = this.badgeBackground ? this.badgeBackground.toString() : null;
              var foreground = this.badgeForeground ? this.badgeForeground.toString() : null;
              var border = this.badgeBorder ? this.badgeBorder.toString() : null;
              this.element.style.backgroundColor = background;
              this.element.style.color = foreground;
              this.element.style.borderWidth = border ? '1px' : null;
              this.element.style.borderStyle = border ? 'solid' : null;
              this.element.style.borderColor = border;
          }
      };
      return CountBadge;
  }());
  exports.CountBadge = CountBadge;
  

});
