define('node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneServices', function(require, exports, module) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.DynamicStandaloneServices = exports.StaticServices = void 0;
  /*---------------------------------------------------------------------------------------------
   *  Copyright (c) Microsoft Corporation. All rights reserved.
   *  Licensed under the MIT License. See License.txt in the project root for license information.
   *--------------------------------------------------------------------------------------------*/
  var __extends = (this && this.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b)
                  if (b.hasOwnProperty(p))
                      d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  var lifecycle_js_1 = require("node_modules/monaco-editor/esm/vs/base/common/lifecycle");
  var bulkEditService_js_1 = require("node_modules/monaco-editor/esm/vs/editor/browser/services/bulkEditService");
  var codeEditorService_js_1 = require("node_modules/monaco-editor/esm/vs/editor/browser/services/codeEditorService");
  var editorWorkerService_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/services/editorWorkerService");
  var editorWorkerServiceImpl_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/services/editorWorkerServiceImpl");
  var modeService_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/services/modeService");
  var modeServiceImpl_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/services/modeServiceImpl");
  var modelService_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/services/modelService");
  var modelServiceImpl_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/services/modelServiceImpl");
  var resourceConfiguration_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/services/resourceConfiguration");
  var simpleServices_js_1 = require("node_modules/monaco-editor/esm/vs/editor/standalone/browser/simpleServices");
  var standaloneCodeServiceImpl_js_1 = require("node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneCodeServiceImpl");
  var standaloneThemeServiceImpl_js_1 = require("node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneThemeServiceImpl");
  var standaloneThemeService_js_1 = require("node_modules/monaco-editor/esm/vs/editor/standalone/common/standaloneThemeService");
  var actions_js_1 = require("node_modules/monaco-editor/esm/vs/platform/actions/common/actions");
  var commands_js_1 = require("node_modules/monaco-editor/esm/vs/platform/commands/common/commands");
  var configuration_js_1 = require("node_modules/monaco-editor/esm/vs/platform/configuration/common/configuration");
  var contextKeyService_js_1 = require("node_modules/monaco-editor/esm/vs/platform/contextkey/browser/contextKeyService");
  var contextkey_js_1 = require("node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkey");
  var contextMenuService_js_1 = require("node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuService");
  var contextView_js_1 = require("node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextView");
  var contextViewService_js_1 = require("node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextViewService");
  var dialogs_js_1 = require("node_modules/monaco-editor/esm/vs/platform/dialogs/common/dialogs");
  var instantiation_js_1 = require("node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation");
  var instantiationService_js_1 = require("node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiationService");
  var serviceCollection_js_1 = require("node_modules/monaco-editor/esm/vs/platform/instantiation/common/serviceCollection");
  var keybinding_js_1 = require("node_modules/monaco-editor/esm/vs/platform/keybinding/common/keybinding");
  var label_js_1 = require("node_modules/monaco-editor/esm/vs/platform/label/common/label");
  var listService_js_1 = require("node_modules/monaco-editor/esm/vs/platform/list/browser/listService");
  var log_js_1 = require("node_modules/monaco-editor/esm/vs/platform/log/common/log");
  var markerService_js_1 = require("node_modules/monaco-editor/esm/vs/platform/markers/common/markerService");
  var markers_js_1 = require("node_modules/monaco-editor/esm/vs/platform/markers/common/markers");
  var notification_js_1 = require("node_modules/monaco-editor/esm/vs/platform/notification/common/notification");
  var progress_js_1 = require("node_modules/monaco-editor/esm/vs/platform/progress/common/progress");
  var storage_js_1 = require("node_modules/monaco-editor/esm/vs/platform/storage/common/storage");
  var telemetry_js_1 = require("node_modules/monaco-editor/esm/vs/platform/telemetry/common/telemetry");
  var themeService_js_1 = require("node_modules/monaco-editor/esm/vs/platform/theme/common/themeService");
  var workspace_js_1 = require("node_modules/monaco-editor/esm/vs/platform/workspace/common/workspace");
  var menuService_js_1 = require("node_modules/monaco-editor/esm/vs/platform/actions/common/menuService");
  var markersDecorationService_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/services/markersDecorationService");
  var markerDecorationsServiceImpl_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorationsServiceImpl");
  var suggestMemory_js_1 = require("node_modules/monaco-editor/esm/vs/editor/contrib/suggest/suggestMemory");
  var accessibility_js_1 = require("node_modules/monaco-editor/esm/vs/platform/accessibility/common/accessibility");
  var accessibilityService_js_1 = require("node_modules/monaco-editor/esm/vs/platform/accessibility/common/accessibilityService");
  var layoutService_js_1 = require("node_modules/monaco-editor/esm/vs/platform/layout/browser/layoutService");
  var codeLensCache_js_1 = require("node_modules/monaco-editor/esm/vs/editor/contrib/codelens/codeLensCache");
  (function (StaticServices) {
      var _serviceCollection = new serviceCollection_js_1.ServiceCollection();
      var LazyStaticService = /** @class */ (function () {
          function LazyStaticService(serviceId, factory) {
              this._serviceId = serviceId;
              this._factory = factory;
              this._value = null;
          }
          Object.defineProperty(LazyStaticService.prototype, "id", {
              get: function () { return this._serviceId; },
              enumerable: true,
              configurable: true
          });
          LazyStaticService.prototype.get = function (overrides) {
              if (!this._value) {
                  if (overrides) {
                      this._value = overrides[this._serviceId.toString()];
                  }
                  if (!this._value) {
                      this._value = this._factory(overrides);
                  }
                  if (!this._value) {
                      throw new Error('Service ' + this._serviceId + ' is missing!');
                  }
                  _serviceCollection.set(this._serviceId, this._value);
              }
              return this._value;
          };
          return LazyStaticService;
      }());
      StaticServices.LazyStaticService = LazyStaticService;
      var _all = [];
      function define(serviceId, factory) {
          var r = new LazyStaticService(serviceId, factory);
          _all.push(r);
          return r;
      }
      function init(overrides) {
          // Create a fresh service collection
          var result = new serviceCollection_js_1.ServiceCollection();
          // Initialize the service collection with the overrides
          for (var serviceId in overrides) {
              if (overrides.hasOwnProperty(serviceId)) {
                  result.set(instantiation_js_1.createDecorator(serviceId), overrides[serviceId]);
              }
          }
          // Make sure the same static services are present in all service collections
          _all.forEach(function (service) { return result.set(service.id, service.get(overrides)); });
          // Ensure the collection gets the correct instantiation service
          var instantiationService = new instantiationService_js_1.InstantiationService(result, true);
          result.set(instantiation_js_1.IInstantiationService, instantiationService);
          return [result, instantiationService];
      }
      StaticServices.init = init;
      StaticServices.instantiationService = define(instantiation_js_1.IInstantiationService, function () { return new instantiationService_js_1.InstantiationService(_serviceCollection, true); });
      var configurationServiceImpl = new simpleServices_js_1.SimpleConfigurationService();
      StaticServices.configurationService = define(configuration_js_1.IConfigurationService, function () { return configurationServiceImpl; });
      StaticServices.resourceConfigurationService = define(resourceConfiguration_js_1.ITextResourceConfigurationService, function () { return new simpleServices_js_1.SimpleResourceConfigurationService(configurationServiceImpl); });
      StaticServices.resourcePropertiesService = define(resourceConfiguration_js_1.ITextResourcePropertiesService, function () { return new simpleServices_js_1.SimpleResourcePropertiesService(configurationServiceImpl); });
      StaticServices.contextService = define(workspace_js_1.IWorkspaceContextService, function () { return new simpleServices_js_1.SimpleWorkspaceContextService(); });
      StaticServices.labelService = define(label_js_1.ILabelService, function () { return new simpleServices_js_1.SimpleUriLabelService(); });
      StaticServices.telemetryService = define(telemetry_js_1.ITelemetryService, function () { return new simpleServices_js_1.StandaloneTelemetryService(); });
      StaticServices.dialogService = define(dialogs_js_1.IDialogService, function () { return new simpleServices_js_1.SimpleDialogService(); });
      StaticServices.notificationService = define(notification_js_1.INotificationService, function () { return new simpleServices_js_1.SimpleNotificationService(); });
      StaticServices.accessibilityService = define(accessibility_js_1.IAccessibilityService, function () { return new accessibilityService_js_1.BrowserAccessibilityService(); });
      StaticServices.markerService = define(markers_js_1.IMarkerService, function () { return new markerService_js_1.MarkerService(); });
      StaticServices.modeService = define(modeService_js_1.IModeService, function (o) { return new modeServiceImpl_js_1.ModeServiceImpl(); });
      StaticServices.modelService = define(modelService_js_1.IModelService, function (o) { return new modelServiceImpl_js_1.ModelServiceImpl(StaticServices.configurationService.get(o), StaticServices.resourcePropertiesService.get(o)); });
      StaticServices.markerDecorationsService = define(markersDecorationService_js_1.IMarkerDecorationsService, function (o) { return new markerDecorationsServiceImpl_js_1.MarkerDecorationsService(StaticServices.modelService.get(o), StaticServices.markerService.get(o)); });
      StaticServices.standaloneThemeService = define(standaloneThemeService_js_1.IStandaloneThemeService, function () { return new standaloneThemeServiceImpl_js_1.StandaloneThemeServiceImpl(); });
      StaticServices.codeEditorService = define(codeEditorService_js_1.ICodeEditorService, function (o) { return new standaloneCodeServiceImpl_js_1.StandaloneCodeEditorServiceImpl(StaticServices.standaloneThemeService.get(o)); });
      StaticServices.progressService = define(progress_js_1.IProgressService, function () { return new simpleServices_js_1.SimpleProgressService(); });
      StaticServices.storageService = define(storage_js_1.IStorageService, function () { return new storage_js_1.InMemoryStorageService(); });
      StaticServices.logService = define(log_js_1.ILogService, function () { return new log_js_1.NullLogService(); });
      StaticServices.editorWorkerService = define(editorWorkerService_js_1.IEditorWorkerService, function (o) { return new editorWorkerServiceImpl_js_1.EditorWorkerServiceImpl(StaticServices.modelService.get(o), StaticServices.resourceConfigurationService.get(o), StaticServices.logService.get(o)); });
      StaticServices.suggestMemoryService = define(suggestMemory_js_1.ISuggestMemoryService, function (o) { return new suggestMemory_js_1.SuggestMemoryService(StaticServices.storageService.get(o), StaticServices.configurationService.get(o)); });
      StaticServices.codeLensCacheService = define(codeLensCache_js_1.ICodeLensCache, function (o) { return new codeLensCache_js_1.CodeLensCache(StaticServices.storageService.get(o)); });
  })(exports.StaticServices || (exports.StaticServices = {}));
  var DynamicStandaloneServices = /** @class */ (function (_super) {
      __extends(DynamicStandaloneServices, _super);
      function DynamicStandaloneServices(domElement, overrides) {
          var _this = _super.call(this) || this;
          var _a = exports.StaticServices.init(overrides), _serviceCollection = _a[0], _instantiationService = _a[1];
          _this._serviceCollection = _serviceCollection;
          _this._instantiationService = _instantiationService;
          var configurationService = _this.get(configuration_js_1.IConfigurationService);
          var notificationService = _this.get(notification_js_1.INotificationService);
          var telemetryService = _this.get(telemetry_js_1.ITelemetryService);
          var themeService = _this.get(themeService_js_1.IThemeService);
          var ensure = function (serviceId, factory) {
              var value = null;
              if (overrides) {
                  value = overrides[serviceId.toString()];
              }
              if (!value) {
                  value = factory();
              }
              _this._serviceCollection.set(serviceId, value);
              return value;
          };
          var contextKeyService = ensure(contextkey_js_1.IContextKeyService, function () { return _this._register(new contextKeyService_js_1.ContextKeyService(configurationService)); });
          ensure(listService_js_1.IListService, function () { return new listService_js_1.ListService(contextKeyService); });
          var commandService = ensure(commands_js_1.ICommandService, function () { return new simpleServices_js_1.StandaloneCommandService(_this._instantiationService); });
          var keybindingService = ensure(keybinding_js_1.IKeybindingService, function () { return _this._register(new simpleServices_js_1.StandaloneKeybindingService(contextKeyService, commandService, telemetryService, notificationService, domElement)); });
          var layoutService = ensure(layoutService_js_1.ILayoutService, function () { return new simpleServices_js_1.SimpleLayoutService(domElement); });
          var contextViewService = ensure(contextView_js_1.IContextViewService, function () { return _this._register(new contextViewService_js_1.ContextViewService(layoutService)); });
          ensure(contextView_js_1.IContextMenuService, function () {
              var contextMenuService = new contextMenuService_js_1.ContextMenuService(telemetryService, notificationService, contextViewService, keybindingService, themeService);
              contextMenuService.configure({ blockMouse: false }); // we do not want that in the standalone editor
              return _this._register(contextMenuService);
          });
          ensure(actions_js_1.IMenuService, function () { return new menuService_js_1.MenuService(commandService); });
          ensure(bulkEditService_js_1.IBulkEditService, function () { return new simpleServices_js_1.SimpleBulkEditService(exports.StaticServices.modelService.get(modelService_js_1.IModelService)); });
          return _this;
      }
      DynamicStandaloneServices.prototype.get = function (serviceId) {
          var r = this._serviceCollection.get(serviceId);
          if (!r) {
              throw new Error('Missing service ' + serviceId);
          }
          return r;
      };
      DynamicStandaloneServices.prototype.set = function (serviceId, instance) {
          this._serviceCollection.set(serviceId, instance);
      };
      DynamicStandaloneServices.prototype.has = function (serviceId) {
          return this._serviceCollection.has(serviceId);
      };
      return DynamicStandaloneServices;
  }(lifecycle_js_1.Disposable));
  exports.DynamicStandaloneServices = DynamicStandaloneServices;
  

});
