define('node_modules/monaco-editor/esm/vs/editor/common/modes/modesRegistry', function(require, exports, module) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.PLAINTEXT_LANGUAGE_IDENTIFIER = exports.PLAINTEXT_MODE_ID = exports.ModesRegistry = exports.EditorModesRegistry = exports.Extensions = void 0;
  var tslib_1 = require("node_modules/tslib/tslib");
  /*---------------------------------------------------------------------------------------------
   *  Copyright (c) Microsoft Corporation. All rights reserved.
   *  Licensed under the MIT License. See License.txt in the project root for license information.
   *--------------------------------------------------------------------------------------------*/
  var nls = tslib_1.__importStar(require("node_modules/monaco-editor/esm/vs/nls"));
  var event_js_1 = require("node_modules/monaco-editor/esm/vs/base/common/event");
  var modes_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/modes");
  var languageConfigurationRegistry_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/modes/languageConfigurationRegistry");
  var platform_js_1 = require("node_modules/monaco-editor/esm/vs/platform/registry/common/platform");
  // Define extension point ids
  exports.Extensions = {
      ModesRegistry: 'editor.modesRegistry'
  };
  var EditorModesRegistry = /** @class */ (function () {
      function EditorModesRegistry() {
          this._onDidChangeLanguages = new event_js_1.Emitter();
          this.onDidChangeLanguages = this._onDidChangeLanguages.event;
          this._languages = [];
          this._dynamicLanguages = [];
      }
      // --- languages
      EditorModesRegistry.prototype.registerLanguage = function (def) {
          this._languages.push(def);
          this._onDidChangeLanguages.fire(undefined);
      };
      EditorModesRegistry.prototype.getLanguages = function () {
          return [].concat(this._languages).concat(this._dynamicLanguages);
      };
      return EditorModesRegistry;
  }());
  exports.EditorModesRegistry = EditorModesRegistry;
  exports.ModesRegistry = new EditorModesRegistry();
  platform_js_1.Registry.add(exports.Extensions.ModesRegistry, exports.ModesRegistry);
  exports.PLAINTEXT_MODE_ID = 'plaintext';
  exports.PLAINTEXT_LANGUAGE_IDENTIFIER = new modes_js_1.LanguageIdentifier(exports.PLAINTEXT_MODE_ID, 1 /* PlainText */);
  exports.ModesRegistry.registerLanguage({
      id: exports.PLAINTEXT_MODE_ID,
      extensions: ['.txt', '.gitignore'],
      aliases: [nls.localize('plainText.alias', "Plain Text"), 'text'],
      mimetypes: ['text/plain']
  });
  languageConfigurationRegistry_js_1.LanguageConfigurationRegistry.register(exports.PLAINTEXT_LANGUAGE_IDENTIFIER, {
      brackets: [
          ['(', ')'],
          ['[', ']'],
          ['{', '}'],
      ]
  });
  

});
