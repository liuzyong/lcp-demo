define('node_modules/monaco-editor/esm/vs/editor/common/model', function(require, exports, module) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.ApplyEditsResult = exports.FindMatch = exports.TextModelResolvedOptions = exports.OverviewRulerLane = void 0;
  (function (OverviewRulerLane) {
      OverviewRulerLane[OverviewRulerLane["Left"] = 1] = "Left";
      OverviewRulerLane[OverviewRulerLane["Center"] = 2] = "Center";
      OverviewRulerLane[OverviewRulerLane["Right"] = 4] = "Right";
      OverviewRulerLane[OverviewRulerLane["Full"] = 7] = "Full";
  })(exports.OverviewRulerLane || (exports.OverviewRulerLane = {}));
  var TextModelResolvedOptions = /** @class */ (function () {
      /**
       * @internal
       */
      function TextModelResolvedOptions(src) {
          this.tabSize = src.tabSize | 0;
          this.indentSize = src.tabSize | 0;
          this.insertSpaces = Boolean(src.insertSpaces);
          this.defaultEOL = src.defaultEOL | 0;
          this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);
      }
      /**
       * @internal
       */
      TextModelResolvedOptions.prototype.equals = function (other) {
          return (this.tabSize === other.tabSize
              && this.indentSize === other.indentSize
              && this.insertSpaces === other.insertSpaces
              && this.defaultEOL === other.defaultEOL
              && this.trimAutoWhitespace === other.trimAutoWhitespace);
      };
      /**
       * @internal
       */
      TextModelResolvedOptions.prototype.createChangeEvent = function (newOpts) {
          return {
              tabSize: this.tabSize !== newOpts.tabSize,
              indentSize: this.indentSize !== newOpts.indentSize,
              insertSpaces: this.insertSpaces !== newOpts.insertSpaces,
              trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,
          };
      };
      return TextModelResolvedOptions;
  }());
  exports.TextModelResolvedOptions = TextModelResolvedOptions;
  var FindMatch = /** @class */ (function () {
      /**
       * @internal
       */
      function FindMatch(range, matches) {
          this.range = range;
          this.matches = matches;
      }
      return FindMatch;
  }());
  exports.FindMatch = FindMatch;
  /**
   * @internal
   */
  var ApplyEditsResult = /** @class */ (function () {
      function ApplyEditsResult(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {
          this.reverseEdits = reverseEdits;
          this.changes = changes;
          this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;
      }
      return ApplyEditsResult;
  }());
  exports.ApplyEditsResult = ApplyEditsResult;
  

});
