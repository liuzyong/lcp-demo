define('node_modules/monaco-editor/esm/vs/editor/common/commands/surroundSelectionCommand', function(require, exports, module) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.SurroundSelectionCommand = void 0;
  /*---------------------------------------------------------------------------------------------
   *  Copyright (c) Microsoft Corporation. All rights reserved.
   *  Licensed under the MIT License. See License.txt in the project root for license information.
   *--------------------------------------------------------------------------------------------*/
  var range_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/core/range");
  var selection_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/core/selection");
  var SurroundSelectionCommand = /** @class */ (function () {
      function SurroundSelectionCommand(range, charBeforeSelection, charAfterSelection) {
          this._range = range;
          this._charBeforeSelection = charBeforeSelection;
          this._charAfterSelection = charAfterSelection;
      }
      SurroundSelectionCommand.prototype.getEditOperations = function (model, builder) {
          builder.addTrackedEditOperation(new range_js_1.Range(this._range.startLineNumber, this._range.startColumn, this._range.startLineNumber, this._range.startColumn), this._charBeforeSelection);
          builder.addTrackedEditOperation(new range_js_1.Range(this._range.endLineNumber, this._range.endColumn, this._range.endLineNumber, this._range.endColumn), this._charAfterSelection);
      };
      SurroundSelectionCommand.prototype.computeCursorState = function (model, helper) {
          var inverseEditOperations = helper.getInverseEditOperations();
          var firstOperationRange = inverseEditOperations[0].range;
          var secondOperationRange = inverseEditOperations[1].range;
          return new selection_js_1.Selection(firstOperationRange.endLineNumber, firstOperationRange.endColumn, secondOperationRange.endLineNumber, secondOperationRange.endColumn - this._charAfterSelection.length);
      };
      return SurroundSelectionCommand;
  }());
  exports.SurroundSelectionCommand = SurroundSelectionCommand;
  

});
