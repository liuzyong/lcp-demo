define('node_modules/monaco-editor/esm/vs/editor/contrib/hover/getHover', function(require, exports, module) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.getHover = void 0;
  /*---------------------------------------------------------------------------------------------
   *  Copyright (c) Microsoft Corporation. All rights reserved.
   *  Licensed under the MIT License. See License.txt in the project root for license information.
   *--------------------------------------------------------------------------------------------*/
  var arrays_js_1 = require("node_modules/monaco-editor/esm/vs/base/common/arrays");
  var cancellation_js_1 = require("node_modules/monaco-editor/esm/vs/base/common/cancellation");
  var errors_js_1 = require("node_modules/monaco-editor/esm/vs/base/common/errors");
  var editorExtensions_js_1 = require("node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions");
  var modes_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/modes");
  function getHover(model, position, token) {
      var supports = modes_js_1.HoverProviderRegistry.ordered(model);
      var promises = supports.map(function (support) {
          return Promise.resolve(support.provideHover(model, position, token)).then(function (hover) {
              return hover && isValid(hover) ? hover : undefined;
          }, function (err) {
              errors_js_1.onUnexpectedExternalError(err);
              return undefined;
          });
      });
      return Promise.all(promises).then(arrays_js_1.coalesce);
  }
  exports.getHover = getHover;
  editorExtensions_js_1.registerDefaultLanguageCommand('_executeHoverProvider', function (model, position) { return getHover(model, position, cancellation_js_1.CancellationToken.None); });
  function isValid(result) {
      var hasRange = (typeof result.range !== 'undefined');
      var hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;
      return hasRange && hasHtmlContent;
  }
  

});
