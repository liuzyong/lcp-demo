define('node_modules/monaco-editor/esm/vs/editor/contrib/goToDefinition/goToDefinition', function(require, exports, module) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.getTypeDefinitionsAtPosition = exports.getImplementationsAtPosition = exports.getDeclarationsAtPosition = exports.getDefinitionsAtPosition = void 0;
  /*---------------------------------------------------------------------------------------------
   *  Copyright (c) Microsoft Corporation. All rights reserved.
   *  Licensed under the MIT License. See License.txt in the project root for license information.
   *--------------------------------------------------------------------------------------------*/
  var arrays_js_1 = require("node_modules/monaco-editor/esm/vs/base/common/arrays");
  var cancellation_js_1 = require("node_modules/monaco-editor/esm/vs/base/common/cancellation");
  var errors_js_1 = require("node_modules/monaco-editor/esm/vs/base/common/errors");
  var editorExtensions_js_1 = require("node_modules/monaco-editor/esm/vs/editor/browser/editorExtensions");
  var modes_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/modes");
  function getDefinitions(model, position, registry, provide) {
      var provider = registry.ordered(model);
      // get results
      var promises = provider.map(function (provider) {
          return Promise.resolve(provide(provider, model, position)).then(undefined, function (err) {
              errors_js_1.onUnexpectedExternalError(err);
              return undefined;
          });
      });
      return Promise.all(promises)
          .then(arrays_js_1.flatten)
          .then(arrays_js_1.coalesce);
  }
  function getDefinitionsAtPosition(model, position, token) {
      return getDefinitions(model, position, modes_js_1.DefinitionProviderRegistry, function (provider, model, position) {
          return provider.provideDefinition(model, position, token);
      });
  }
  exports.getDefinitionsAtPosition = getDefinitionsAtPosition;
  function getDeclarationsAtPosition(model, position, token) {
      return getDefinitions(model, position, modes_js_1.DeclarationProviderRegistry, function (provider, model, position) {
          return provider.provideDeclaration(model, position, token);
      });
  }
  exports.getDeclarationsAtPosition = getDeclarationsAtPosition;
  function getImplementationsAtPosition(model, position, token) {
      return getDefinitions(model, position, modes_js_1.ImplementationProviderRegistry, function (provider, model, position) {
          return provider.provideImplementation(model, position, token);
      });
  }
  exports.getImplementationsAtPosition = getImplementationsAtPosition;
  function getTypeDefinitionsAtPosition(model, position, token) {
      return getDefinitions(model, position, modes_js_1.TypeDefinitionProviderRegistry, function (provider, model, position) {
          return provider.provideTypeDefinition(model, position, token);
      });
  }
  exports.getTypeDefinitionsAtPosition = getTypeDefinitionsAtPosition;
  editorExtensions_js_1.registerDefaultLanguageCommand('_executeDefinitionProvider', function (model, position) { return getDefinitionsAtPosition(model, position, cancellation_js_1.CancellationToken.None); });
  editorExtensions_js_1.registerDefaultLanguageCommand('_executeDeclarationProvider', function (model, position) { return getDeclarationsAtPosition(model, position, cancellation_js_1.CancellationToken.None); });
  editorExtensions_js_1.registerDefaultLanguageCommand('_executeImplementationProvider', function (model, position) { return getImplementationsAtPosition(model, position, cancellation_js_1.CancellationToken.None); });
  editorExtensions_js_1.registerDefaultLanguageCommand('_executeTypeDefinitionProvider', function (model, position) { return getTypeDefinitionsAtPosition(model, position, cancellation_js_1.CancellationToken.None); });
  

});
