define('node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/inPlaceReplaceCommand', function(require, exports, module) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.InPlaceReplaceCommand = void 0;
  /*---------------------------------------------------------------------------------------------
   *  Copyright (c) Microsoft Corporation. All rights reserved.
   *  Licensed under the MIT License. See License.txt in the project root for license information.
   *--------------------------------------------------------------------------------------------*/
  var selection_js_1 = require("node_modules/monaco-editor/esm/vs/editor/common/core/selection");
  var InPlaceReplaceCommand = /** @class */ (function () {
      function InPlaceReplaceCommand(editRange, originalSelection, text) {
          this._editRange = editRange;
          this._originalSelection = originalSelection;
          this._text = text;
      }
      InPlaceReplaceCommand.prototype.getEditOperations = function (model, builder) {
          builder.addTrackedEditOperation(this._editRange, this._text);
      };
      InPlaceReplaceCommand.prototype.computeCursorState = function (model, helper) {
          var inverseEditOperations = helper.getInverseEditOperations();
          var srcRange = inverseEditOperations[0].range;
          if (!this._originalSelection.isEmpty()) {
              // Preserve selection and extends to typed text
              return new selection_js_1.Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);
          }
          return new selection_js_1.Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));
      };
      return InPlaceReplaceCommand;
  }());
  exports.InPlaceReplaceCommand = InPlaceReplaceCommand;
  

});
