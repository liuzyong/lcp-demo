define('node_modules/monaco-editor/esm/vs/language/json/monaco.contribution', function(require, exports, module) {

  "use strict";
  var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
  }) : (function(o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
  }));
  var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
  }) : function(o, v) {
      o["default"] = v;
  });
  var __importStar = (this && this.__importStar) || function (mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.LanguageServiceDefaultsImpl = void 0;
  require("node_modules/monaco-editor/esm/vs/editor/editor.api");
  /*---------------------------------------------------------------------------------------------
   *  Copyright (c) Microsoft Corporation. All rights reserved.
   *  Licensed under the MIT License. See License.txt in the project root for license information.
   *--------------------------------------------------------------------------------------------*/
  'use strict';
  var Emitter = monaco.Emitter;
  // --- JSON configuration and defaults ---------
  var LanguageServiceDefaultsImpl = /** @class */ (function () {
      function LanguageServiceDefaultsImpl(languageId, diagnosticsOptions) {
          this._onDidChange = new Emitter();
          this._languageId = languageId;
          this.setDiagnosticsOptions(diagnosticsOptions);
      }
      Object.defineProperty(LanguageServiceDefaultsImpl.prototype, "onDidChange", {
          get: function () {
              return this._onDidChange.event;
          },
          enumerable: true,
          configurable: true
      });
      Object.defineProperty(LanguageServiceDefaultsImpl.prototype, "languageId", {
          get: function () {
              return this._languageId;
          },
          enumerable: true,
          configurable: true
      });
      Object.defineProperty(LanguageServiceDefaultsImpl.prototype, "diagnosticsOptions", {
          get: function () {
              return this._diagnosticsOptions;
          },
          enumerable: true,
          configurable: true
      });
      LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions = function (options) {
          this._diagnosticsOptions = options || Object.create(null);
          this._onDidChange.fire(this);
      };
      return LanguageServiceDefaultsImpl;
  }());
  exports.LanguageServiceDefaultsImpl = LanguageServiceDefaultsImpl;
  var diagnosticDefault = {
      validate: true,
      allowComments: true,
      schemas: [],
      enableSchemaRequest: false
  };
  var jsonDefaults = new LanguageServiceDefaultsImpl('json', diagnosticDefault);
  // Export API
  function createAPI() {
      return {
          jsonDefaults: jsonDefaults,
      };
  }
  monaco.languages.json = createAPI();
  // --- Registration to monaco editor ---
  function getMode() {
      return Promise.resolve().then(function () { return __importStar(require('node_modules/monaco-editor/esm/vs/language/json/jsonMode')); });
  }
  monaco.languages.register({
      id: 'json',
      extensions: ['.json', '.bowerrc', '.jshintrc', '.jscsrc', '.eslintrc', '.babelrc'],
      aliases: ['JSON', 'json'],
      mimetypes: ['application/json'],
  });
  monaco.languages.onLanguage('json', function () {
      getMode().then(function (mode) { return mode.setupMode(jsonDefaults); });
  });
  

});
