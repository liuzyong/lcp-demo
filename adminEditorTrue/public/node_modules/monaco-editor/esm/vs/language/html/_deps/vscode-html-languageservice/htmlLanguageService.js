define('node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/htmlLanguageService', function(require, exports, module) {

  "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.newHTMLDataProvider = exports.getLanguageService = void 0;
  var tslib_1 = require("node_modules/tslib/tslib");
  /*---------------------------------------------------------------------------------------------
   *  Copyright (c) Microsoft Corporation. All rights reserved.
   *  Licensed under the MIT License. See License.txt in the project root for license information.
   *--------------------------------------------------------------------------------------------*/
  var htmlScanner_js_1 = require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlScanner");
  var htmlParser_js_1 = require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/parser/htmlParser");
  var htmlCompletion_js_1 = require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlCompletion");
  var htmlHover_js_1 = require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlHover");
  var htmlFormatter_js_1 = require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlFormatter");
  var htmlLinks_js_1 = require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlLinks");
  var htmlHighlighting_js_1 = require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlHighlighting");
  var htmlSymbolsProvider_js_1 = require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlSymbolsProvider");
  var htmlFolding_js_1 = require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlFolding");
  var htmlSelectionRange_js_1 = require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/services/htmlSelectionRange");
  var builtinDataProviders_js_1 = require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/languageFacts/builtinDataProviders");
  var dataProvider_js_1 = require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/languageFacts/dataProvider");
  tslib_1.__exportStar(require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-html-languageservice/htmlLanguageTypes"), exports);
  tslib_1.__exportStar(require("node_modules/monaco-editor/esm/vs/language/html/_deps/vscode-languageserver-types/main"), exports);
  function getLanguageService(options) {
      var htmlCompletion = new htmlCompletion_js_1.HTMLCompletion();
      if (options && options.customDataProviders) {
          builtinDataProviders_js_1.handleCustomDataProviders(options.customDataProviders);
      }
      return {
          createScanner: htmlScanner_js_1.createScanner,
          parseHTMLDocument: function (document) { return htmlParser_js_1.parse(document.getText()); },
          doComplete: htmlCompletion.doComplete.bind(htmlCompletion),
          setCompletionParticipants: htmlCompletion.setCompletionParticipants.bind(htmlCompletion),
          doHover: htmlHover_js_1.doHover,
          format: htmlFormatter_js_1.format,
          findDocumentHighlights: htmlHighlighting_js_1.findDocumentHighlights,
          findDocumentLinks: htmlLinks_js_1.findDocumentLinks,
          findDocumentSymbols: htmlSymbolsProvider_js_1.findDocumentSymbols,
          getFoldingRanges: htmlFolding_js_1.getFoldingRanges,
          getSelectionRanges: htmlSelectionRange_js_1.getSelectionRanges,
          doTagComplete: htmlCompletion.doTagComplete.bind(htmlCompletion),
      };
  }
  exports.getLanguageService = getLanguageService;
  function newHTMLDataProvider(id, customData) {
      return new dataProvider_js_1.HTMLDataProvider(id, customData);
  }
  exports.newHTMLDataProvider = newHTMLDataProvider;
  //# sourceMappingURL=htmlLanguageService.js.map
  

});
