define('node_modules/react-color/lib/components/hue/Hue', function(require, exports, module) {

  'use strict';
  
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.HuePicker = undefined;
  
  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
  
  var _react = require('node_modules/react/index');
  
  var _react2 = _interopRequireDefault(_react);
  
  var _reactcss = require('node_modules/reactcss/lib/index');
  
  var _reactcss2 = _interopRequireDefault(_reactcss);
  
  var _common = require('node_modules/react-color/lib/components/common/index');
  
  var _HuePointer = require('node_modules/react-color/lib/components/hue/HuePointer');
  
  var _HuePointer2 = _interopRequireDefault(_HuePointer);
  
  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
  
  var HuePicker = exports.HuePicker = function HuePicker(_ref) {
    var width = _ref.width,
        height = _ref.height,
        onChange = _ref.onChange,
        hsl = _ref.hsl,
        direction = _ref.direction,
        pointer = _ref.pointer,
        _ref$className = _ref.className,
        className = _ref$className === undefined ? '' : _ref$className;
  
    var styles = (0, _reactcss2.default)({
      'default': {
        picker: {
          position: 'relative',
          width: width,
          height: height
        },
        hue: {
          radius: '2px'
        }
      }
    });
  
    // Overwrite to provide pure hue color
    var handleChange = function handleChange(data) {
      return onChange({ a: 1, h: data.h, l: 0.5, s: 1 });
    };
  
    return _react2.default.createElement(
      'div',
      { style: styles.picker, className: 'hue-picker ' + className },
      _react2.default.createElement(_common.Hue, _extends({}, styles.hue, {
        hsl: hsl,
        pointer: pointer,
        onChange: handleChange,
        direction: direction
      }))
    );
  };
  
  HuePicker.defaultProps = {
    width: '316px',
    height: '16px',
    direction: 'horizontal',
    pointer: _HuePointer2.default
  };
  
  exports.default = (0, _common.ColorWrap)(HuePicker);

});
