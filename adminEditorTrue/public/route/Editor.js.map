{"version":3,"sources":["/route/Editor.tsx"],"names":[],"mappings":";;;;;AAAA,wDAA0B;AAC1B,2CAAmC;AACnC,yCAA4C;AAG5C,6BAA6D;AAC7D,kCAAgC;AAChC,gCAA8B;AAE9B,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC;AAEtB,kBAAe,mBAAM,CAAC,OAAO,CAAC,CAC1B,qBAAQ,CAAC,UAAS,EAA0F;QAAzF,KAAK,aAAE,QAAQ,gBAAE,OAAO,eAAE,KAAK;IAC9C,IAAM,KAAK,GAAW,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAEpD,IAAI,KAAK,KAAK,YAAY,EAAE;QACxB,YAAY,GAAG,KAAK,CAAC;QACrB,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC;KACjD;IAED,SAAS,IAAI;QACT,KAAK,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAChC,YAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,SAAS,IAAI;QACT,OAAO,CAAC,IAAI,CAAC,MAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAM,CAAC,CAAC;IAChD,CAAC;IAED,SAAS,YAAY;QACjB,OAAO,CACH,uCAAK,SAAS,EAAC,2CAA2C;YACtD,uCAAK,SAAS,EAAC,gCAAgC,+BAAgB;YAE/D,uCAAK,SAAS,EAAC,gBAAgB;;gBACxB,GAAG;gBACN,8BAAC,aAAM,IACH,KAAK,EAAE,KAAK,CAAC,OAAO,EACpB,QAAQ,EAAE,UAAC,KAAc,IAAK,YAAK,CAAC,UAAU,CAAC,KAAK,CAAC,EAAvB,CAAuB,EACrD,SAAS,EAAC,QAAQ,EAClB,MAAM,SACR,CACA;YAEN,uCAAK,SAAS,EAAC,oBAAoB;gBAC/B,uCAAK,SAAS,EAAE,iBAAE,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE,IAAI,mBAEvC;gBAEN,uCAAK,SAAS,EAAC,UAAU,EAAC,OAAO,EAAE,IAAI,mBAEjC,CACJ,CACJ,CACT,CAAC;IACN,CAAC;IAED,OAAO,CACH,8BAAC,aAAM,IAAC,MAAM,EAAE,YAAY,EAAE;QAC1B,8BAAC,oBAAM,IACH,KAAK,EAAE,SAAS,EAChB,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,KAAK,EAAE,KAAK,CAAC,MAAM,EACnB,QAAQ,EAAE,UAAC,KAAU,IAAK,YAAK,CAAC,YAAY,CAAC,KAAK,CAAC,EAAzB,CAAyB,EACnD,SAAS,EAAC,UAAU,GACtB,CACG,CACZ,CAAC;AACN,CAAC,CAAC,CACL,CAAC","file":"Editor.js","sourcesContent":["import React from 'react';\r\nimport {Editor} from 'amis-editor';\r\nimport {inject, observer} from 'mobx-react';\r\nimport {IMainStore} from '../store';\r\nimport {RouteComponentProps} from 'react-router-dom';\r\nimport {Layout, Switch, classnames as cx, toast} from 'amis';\r\nimport '../renderer/MyRenderer';\r\nimport '../editor/MyRenderer';\r\n\r\nlet currentIndex = -1;\r\n\r\nexport default inject('store')(\r\n    observer(function({store, location, history, match}: {store: IMainStore} & RouteComponentProps<{id: string}>) {\r\n        const index: number = parseInt(match.params.id, 10);\r\n\r\n        if (index !== currentIndex) {\r\n            currentIndex = index;\r\n            store.updateSchema(store.pages[index].schema);\r\n        }\r\n\r\n        function save() {\r\n            store.updatePageSchemaAt(index);\r\n            toast.success('保存成功', '提示');\r\n        }\r\n\r\n        function exit() {\r\n            history.push(`/${store.pages[index].path}`);\r\n        }\r\n\r\n        function renderHeader() {\r\n            return (\r\n                <div className=\"editor-header clearfix box-shadow bg-dark\">\r\n                    <div className=\"navbar-brand text-lt font-thin\">Admin 编辑器</div>\r\n\r\n                    <div className=\"editor-preview\">\r\n                        预览{' '}\r\n                        <Switch\r\n                            value={store.preview}\r\n                            onChange={(value: boolean) => store.setPreview(value)}\r\n                            className=\"m-l-xs\"\r\n                            inline\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"editor-header-btns\">\r\n                        <div className={cx('btn-item')} onClick={save}>\r\n                            保存\r\n                        </div>\r\n\r\n                        <div className=\"btn-item\" onClick={exit}>\r\n                            退出\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Layout header={renderHeader()}>\r\n                <Editor\r\n                    theme={'default'}\r\n                    preview={store.preview}\r\n                    value={store.schema}\r\n                    onChange={(value: any) => store.updateSchema(value)}\r\n                    className=\"is-fixed\"\r\n                />\r\n            </Layout>\r\n        );\r\n    })\r\n);\r\n"]}