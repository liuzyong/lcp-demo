{
    "version": 3,
    "file": "HBox.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/HBox.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,wDAA0B;AAC1B,sCAAmD;AAEnD,kEAA4B;AAC5B,0CAA0C;AAiB1C;IAAkC,gCAAkC;IAApE;;IAiDA,CAAC;IA5CC,0BAAW,GAAX,UAAY,MAAc,EAAE,IAAY;QAC/B,IAAA,MAAM,GAAI,IAAI,CAAC,KAAK,OAAd,CAAe;QAE5B,OAAO,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,2BAAY,GAAZ,UAAa,MAAc,EAAE,GAAW,EAAE,MAAc;QAChD,IAAA,KAAsC,IAAI,CAAC,KAAK,EAA/C,UAAU,gBAAA,EAAE,IAAI,UAAA,EAAe,EAAE,iBAAc,CAAC;QAEvD,IAAI,CAAC,kBAAS,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;YAC5B,OAAO,IAAI,CAAC;SACb;QAED,IAAI,KAAK,sBACP,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,MAAM,EAAE,MAAM,CAAC,MAAM,IAClB,MAAM,CAAC,KAAK,CAChB,CAAC;QAEF,OAAO,CACL,uCACE,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,oBAAE,CAAI,EAAE,aAAU,EAAG,MAAiB,CAAC,eAAe,CAAC,EAClE,KAAK,EAAE,KAAK,IAEX,UAAU;YACT,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC;YAC7C,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,YAAU,GAAK,EAAE,MAAM,CAAC,CACzC,CACP,CAAC;IACJ,CAAC;IAED,4BAAa,GAAb;QAAA,iBAMC;QALQ,IAAA,OAAO,GAAI,IAAI,CAAC,KAAK,QAAd,CAAe;QAE7B,OAAO,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,GAAG;YAC7B,OAAA,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC;QAA9C,CAA8C,CAC/C,CAAC;IACJ,CAAC;IAED,qBAAM,GAAN;QACQ,IAAA,KAA8B,IAAI,CAAC,KAAK,EAAvC,SAAS,eAAA,EAAc,EAAE,gBAAc,CAAC;QAC/C,OAAO,uCAAK,SAAS,EAAE,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC,IAAG,IAAI,CAAC,aAAa,EAAE,CAAO,CAAC;IAC7E,CAAC;IA/CM,cAAS,GAAkB,CAAC,SAAS,CAAC,CAAC;IAEvC,iBAAY,GAAuB,EAAE,CAAC;IA8C/C,WAAC;CAAA,AAjDD,CAAkC,eAAK,CAAC,SAAS,GAiDhD;kBAjDoB,IAAI;AAuDzB;IAAkC,wCAAI;IAAtC;;IAAwC,CAAC;IAA5B,YAAY;QAJxB,kBAAQ,CAAC;YACR,IAAI,EAAE,aAAa;YACnB,IAAI,EAAE,MAAM;SACb,CAAC;OACW,YAAY,CAAgB;IAAD,mBAAC;CAAA,AAAzC,CAAkC,IAAI,GAAG;AAA5B,oCAAY",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {Api, SchemaNode, Schema, Action} from '../types';\nimport cx from 'classnames';\nimport {isVisible} from '../utils/helper';\n\nexport type Column = Schema & {\n  columnClassName?: string;\n};\n\nexport interface HBoxProps extends RendererProps {\n  columns: Array<Column>;\n  className: string;\n  itemRender?: (\n    item: any,\n    key: number,\n    length: number,\n    props: any\n  ) => JSX.Element;\n}\n\nexport default class HBox extends React.Component<HBoxProps, object> {\n  static propsList: Array<string> = ['columns'];\n\n  static defaultProps: Partial<HBoxProps> = {};\n\n  renderChild(region: string, node: Schema) {\n    const {render} = this.props;\n\n    return render(region, node);\n  }\n\n  renderColumn(column: Column, key: number, length: number) {\n    const {itemRender, data, classPrefix: ns} = this.props;\n\n    if (!isVisible(column, data)) {\n      return null;\n    }\n\n    let style = {\n      width: column.width,\n      height: column.height,\n      ...column.style\n    };\n\n    return (\n      <div\n        key={key}\n        className={cx(`${ns}Hbox-col`, (column as Column).columnClassName)}\n        style={style}\n      >\n        {itemRender\n          ? itemRender(column, key, length, this.props)\n          : this.renderChild(`column/${key}`, column)}\n      </div>\n    );\n  }\n\n  renderColumns() {\n    const {columns} = this.props;\n\n    return columns.map((column, key) =>\n      this.renderColumn(column, key, columns.length)\n    );\n  }\n\n  render() {\n    const {className, classnames: cx} = this.props;\n    return <div className={cx(`Hbox`, className)}>{this.renderColumns()}</div>;\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)hbox$/,\n  name: 'hbox'\n})\nexport class HBoxRenderer extends HBox {}\n"
    ]
}