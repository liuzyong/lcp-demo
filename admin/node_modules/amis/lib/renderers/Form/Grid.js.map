{
    "version": 3,
    "file": "Grid.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/Grid.tsx"
    ],
    "names": [],
    "mappings": ";;;;AACA,yDAAwE;AAGxE,+BAAkD;AAElD,wDAA0B;AAO1B,IAAM,iBAAiB,GAAG;IACxB,IAAI,EAAE,UAAU;IAChB,KAAK,EAAE,UAAU;IACjB,MAAM,EAAE,iBAAiB;CAC1B,CAAC;AAOF;IAAkC,wCAAe;IAAjD;;IAoCA,CAAC;IAhCC,kCAAW,GAAX,UAAY,MAAc,EAAE,IAAY,EAAE,GAAW,EAAE,MAAc;QAC7D,IAAA,KAOF,IAAI,CAAC,KAAK,EANZ,MAAM,YAAA,EACN,eAAe,qBAAA,EACH,EAAE,gBAAA,EACd,KAAK,WAAA,EACL,UAAU,gBAAA,EACV,KAAK,WACO,CAAC;QAEf,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;YACvE,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,sBAAmB,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAE,CAAC,IAC3D,eAAe,CACd,IAAW,EACV,KAAgB,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,EAC1C;gBACE,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,QAAQ;gBAC3B,UAAU,EAAE,IAAI,CAAC,UAAU,IAAI,iBAAiB;gBAChD,KAAK,OAAA;gBACL,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,MAAM,QAAA;aACP,CACF,CACG,CACP,CAAC;SACH;QAED,OAAO,UAAU;YACf,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC;YAC3C,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;IACxC,CAAC;IAlCM,sBAAS,GAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,yBAAY,GAAG,EAAE,CAAC;IAFd,YAAY;QALxB,eAAQ,CAAC;YACR,IAAI,EAAE,MAAM;YACZ,UAAU,EAAE,KAAK;YACjB,WAAW,EAAE,KAAK;SACnB,CAAC;OACW,YAAY,CAoCxB;IAAD,mBAAC;CAAA,AApCD,CAAkC,cAAI,GAoCrC;AApCY,oCAAY",
    "sourcesContent": [
        "import {Renderer, RendererProps} from '../../factory';\nimport Grid, {ColumnNode, Column, ColProps, ColumnArray} from '../Grid';\nimport {Schema} from '../../types';\n\nimport {FormItem, FormControlProps} from './Item';\nimport pick from 'lodash/pick';\nimport React from 'react';\nimport cx from 'classnames';\nimport {IIRendererStore} from '../../store/iRenderer';\n\nexport interface GridProps extends FormControlProps {\n  store: IIRendererStore;\n}\nconst defaultHorizontal = {\n  left: 'col-sm-4',\n  right: 'col-sm-8',\n  offset: 'col-sm-offset-4'\n};\n\n@FormItem({\n  type: 'grid',\n  strictMode: false,\n  sizeMutable: false\n})\nexport class GridRenderer extends Grid<GridProps> {\n  static propsList: Array<string> = ['columns', 'onChange'];\n  static defaultProps = {};\n\n  renderChild(region: string, node: Schema, key: number, length: number) {\n    const {\n      render,\n      renderFormItems,\n      classnames: cx,\n      $path,\n      itemRender,\n      store\n    } = this.props;\n\n    if (node && !node.type && (node.controls || node.tabs || node.feildSet)) {\n      return (\n        <div className={cx(`Grid-form Form--${node.mode || 'normal'}`)}>\n          {renderFormItems(\n            node as any,\n            ($path as string).replace(/^.*form\\//, ''),\n            {\n              mode: node.mode || 'normal',\n              horizontal: node.horizontal || defaultHorizontal,\n              store,\n              data: store.data,\n              render\n            }\n          )}\n        </div>\n      );\n    }\n\n    return itemRender\n      ? itemRender(node, key, length, this.props)\n      : render(region, node.body || node);\n  }\n}\n"
    ]
}