import { OptionsControlProps } from './Options';
import React from 'react';
import { Option } from './Options';
import { Api } from '../../types';
export interface BaseTransferProps extends OptionsControlProps {
    showArrow?: boolean;
    sortable?: boolean;
    selectMode?: 'table' | 'list' | 'tree' | 'chained' | 'associated';
    leftOptions?: Array<Option>;
    leftMode?: 'tree' | 'list';
    rightMode?: 'table' | 'list' | 'tree' | 'chained';
    searchResultMode?: 'table' | 'list' | 'tree' | 'chained';
    columns?: Array<any>;
    searchable?: boolean;
    searchApi?: Api;
}
export declare class BaseTransferRenderer<T extends OptionsControlProps = BaseTransferProps> extends React.Component<T> {
    handleChange(value: Array<Option>): void;
    option2value(option: Option): Option;
    handleSearch(term: string, cancelExecutor: Function): Promise<any[]>;
    renderCell(column: {
        name: string;
        label: string;
        [propName: string]: any;
    }, option: Option, colIndex: number, rowIndex: number): JSX.Element;
    render(): JSX.Element;
}
export declare class TransferRender extends BaseTransferRenderer {
}
declare const _default: typeof TransferRender;
export default _default;
