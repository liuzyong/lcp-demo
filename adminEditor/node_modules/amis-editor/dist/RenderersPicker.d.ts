import React from 'react';
import { RendererItem } from './Renderers';
import { RendererProps } from 'amis/lib/factory';
export interface RenderersPickerProps extends RendererProps {
    onChange: (value: any, submitOnChange?: boolean) => void;
    value: any;
    data: {
        renderers: Array<RendererItem>;
    };
}
export interface RenderersPickerState {
    filteredItems: Array<RendererItem>;
    keywords: string;
    activeIndex: number;
}
export default class RendereresPicker extends React.Component<RenderersPickerProps, RenderersPickerState> {
    state: RenderersPickerState;
    componentDidMount(): void;
    componentDidUpdate(prevProps: RenderersPickerProps): void;
    syncRenderers(keywords?: string): void;
    handleSearch(text: string): void;
    handleSeachCancel(): void;
    handleLeftClick(e: React.MouseEvent): void;
    handleClick(e: React.MouseEvent): void;
    hadnlDBClick(e: React.MouseEvent): void;
    renderRenderers(): JSX.Element;
    render(): JSX.Element;
}
