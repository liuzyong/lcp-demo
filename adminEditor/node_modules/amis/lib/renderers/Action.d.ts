/// <reference types="hoist-non-react-statics" />
import React from 'react';
import { RendererProps } from '../factory';
import { ClassNamesFn } from '../theme';
export interface ActionProps {
    className?: string;
    type: 'submit' | 'reset' | 'button';
    actionType?: string;
    label?: string;
    icon?: string;
    iconClassName?: string;
    size?: 'xs' | 'sm' | 'md' | 'lg';
    level?: 'info' | 'success' | 'warning' | 'danger' | 'link';
    onAction?: (e: React.MouseEvent<any> | void | null, action: object) => void;
    isCurrentUrl?: (link: string) => boolean;
    onClick?: (e: React.MouseEvent<any>, props: any) => void;
    primary?: boolean;
    activeClassName: string;
    componentClass: React.ReactType;
    tooltipPlacement: 'bottom' | 'top' | 'right' | 'left' | undefined;
    disabled?: boolean;
    block?: boolean;
    data?: any;
    link?: string;
    disabledTip?: string;
    tooltip?: any;
    isMenuItem?: boolean;
    active?: boolean;
    activeLevel?: string;
    tooltipContainer?: any;
    classPrefix: string;
    classnames: ClassNamesFn;
}
export declare class Action extends React.Component<ActionProps> {
    static defaultProps: Pick<ActionProps, 'type' | 'componentClass' | 'tooltipPlacement' | 'activeClassName'>;
    dom: any;
    handleAction(e: React.MouseEvent<any>): void;
    render(): JSX.Element;
}
declare const _default: {
    new (props: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
        theme?: string | undefined;
        className?: string | undefined;
        classPrefix?: string | undefined;
        classnames?: ClassNamesFn | undefined;
    }>): {
        render(): JSX.Element;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, nextState: Readonly<{}>, nextContext: any): void;
    };
    new (props: Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
        theme?: string | undefined;
        className?: string | undefined;
        classPrefix?: string | undefined;
        classnames?: ClassNamesFn | undefined;
    }, context?: any): {
        render(): JSX.Element;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "link" | "data" | "label" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "actionType" | "iconClassName" | "isCurrentUrl" | "isMenuItem" | "activeLevel"> & Partial<Pick<Pick<ActionProps, "link" | "data" | "label" | "type" | "disabled" | "onClick" | "block" | "icon" | "level" | "size" | "tooltip" | "componentClass" | "tooltipContainer" | "active" | "disabledTip" | "primary" | "onAction" | "tooltipPlacement" | "actionType" | "iconClassName" | "isCurrentUrl" | "activeClassName" | "isMenuItem" | "activeLevel">, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">> & Partial<Pick<Pick<ActionProps, "type" | "componentClass" | "tooltipPlacement" | "activeClassName">, never>> & {
            theme?: string | undefined;
            className?: string | undefined;
            classPrefix?: string | undefined;
            classnames?: ClassNamesFn | undefined;
        }>, nextState: Readonly<{}>, nextContext: any): void;
    };
    displayName: string;
    contextType: React.Context<string>;
    ComposedComponent: typeof Action;
} & import("hoist-non-react-statics").NonReactStatics<typeof Action, {}> & {
    ComposedComponent: typeof Action;
};
export default _default;
export declare class ActionRenderer extends React.Component<RendererProps & Omit<ActionProps, 'onAction' | 'isCurrentUrl' | 'tooltipContainer'> & {
    onAction: (e: React.MouseEvent<any> | void | null, action: object, data: any) => void;
    btnDisabled?: boolean;
}> {
    handleAction(e: React.MouseEvent<any> | void | null, action: any): void;
    isCurrentAction(link: string): boolean;
    render(): JSX.Element;
}
export declare class ButtonRenderer extends ActionRenderer {
}
export declare class SubmitRenderer extends ActionRenderer {
}
export declare class ResetRenderer extends ActionRenderer {
}
