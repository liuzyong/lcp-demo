{
    "version": 3,
    "file": "DropDownButton.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/DropDownButton.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {RootCloseWrapper} from 'react-overlays';\nimport Overlay from '../components/Overlay';\nimport PopOver from '../components/PopOver';\nimport cx from 'classnames';\nimport {isVisible, noop} from '../utils/helper';\nimport {filter} from '../utils/tpl';\nimport {Icon} from '../components/icons';\n\nexport interface DropDownButtonProps extends RendererProps {\n  block?: boolean;\n  size?: 'xs' | 'sm' | 'md' | 'lg';\n  align?: 'left' | 'right';\n  buttons?: Array<any>;\n  iconOnly?: boolean;\n  defaultIsOpened?: boolean;\n  closeOnOutside?: boolean;\n}\n\nexport interface DropDownButtonState {\n  isOpened: boolean;\n}\n\nexport default class DropDownButton extends React.Component<\n  DropDownButtonProps,\n  DropDownButtonState\n> {\n  state: DropDownButtonState = {\n    isOpened: false\n  };\n\n  static defaultProps = {};\n\n  target: any;\n  constructor(props: DropDownButtonProps) {\n    super(props);\n\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n    this.toogle = this.toogle.bind(this);\n    this.domRef = this.domRef.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.defaultIsOpened) {\n      this.setState({\n        isOpened: true\n      });\n    }\n  }\n\n  domRef(ref: any) {\n    this.target = ref;\n  }\n\n  toogle(e: React.MouseEvent<any>) {\n    e.preventDefault();\n\n    this.setState({\n      isOpened: !this.state.isOpened\n    });\n  }\n\n  open() {\n    this.setState({\n      isOpened: true\n    });\n  }\n\n  close() {\n    this.setState({\n      isOpened: false\n    });\n  }\n\n  renderOuter() {\n    const {\n      render,\n      buttons,\n      data,\n      popOverContainer,\n      classnames: cx,\n      classPrefix: ns,\n      children,\n      align,\n      closeOnClick,\n      closeOnOutside\n    } = this.props;\n\n    let body = (\n      <RootCloseWrapper\n        disabled={!this.state.isOpened}\n        onRootClose={closeOnOutside !== false ? this.close : noop}\n      >\n        <ul\n          className={cx('DropDown-menu')}\n          onClick={closeOnClick ? this.close : noop}\n        >\n          {children\n            ? children\n            : Array.isArray(buttons)\n            ? buttons.map((button, index) => {\n                if (!isVisible(button, data)) {\n                  return null;\n                } else if (button === 'divider' || button.type === 'divider') {\n                  return <li key={index} className={cx('DropDown-divider')} />;\n                }\n\n                return (\n                  <li key={index}>\n                    {render(`button/${index}`, {\n                      type: 'button',\n                      ...button,\n                      isMenuItem: true\n                    })}\n                  </li>\n                );\n              })\n            : null}\n        </ul>\n      </RootCloseWrapper>\n    );\n\n    if (popOverContainer) {\n      return (\n        <Overlay container={popOverContainer} target={() => this.target} show>\n          <PopOver\n            overlay\n            onHide={this.close}\n            classPrefix={ns}\n            className={cx('DropDown-popover')}\n            style={{minWidth: this.target?.offsetWidth}}\n          >\n            {body}\n          </PopOver>\n        </Overlay>\n      );\n    }\n\n    return body;\n  }\n\n  render() {\n    const {\n      block,\n      disabled,\n      btnDisabled,\n      size,\n      label,\n      level,\n      primary,\n      className,\n      classnames: cx,\n      align,\n      iconOnly,\n      icon,\n      data\n    } = this.props;\n\n    return (\n      <div\n        className={cx('DropDown ', {\n          'DropDown--block': block,\n          'DropDown--alignRight': align === 'right',\n          'is-opened': this.state.isOpened\n        })}\n        ref={this.domRef}\n      >\n        <button\n          onClick={this.toogle}\n          disabled={disabled || btnDisabled}\n          className={cx(\n            'Button',\n            className,\n            typeof level === 'undefined'\n              ? 'Button--default'\n              : level\n              ? `Button--${level}`\n              : '',\n            {\n              'Button--block': block,\n              'Button--primary': primary,\n              'Button--iconOnly': iconOnly\n            },\n            size ? `Button--${size}` : ''\n          )}\n        >\n          {icon ? (\n            typeof icon === 'string' ? (\n              <i className={cx(icon, 'm-r-xs')} />\n            ) : (\n              icon\n            )\n          ) : null}\n          {typeof label === 'string' ? filter(label, data) : label}\n          <span className={cx('DropDown-caret')}>\n            <Icon icon=\"caret\" className=\"icon\" />\n          </span>\n        </button>\n\n        {this.state.isOpened ? this.renderOuter() : null}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)dropdown-button$/,\n  name: 'dropdown-button'\n})\nexport class DropDownButtonRenderer extends DropDownButton {}\n"
    ]
}