{
    "version": 3,
    "file": "TabsTransfer.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/TabsTransfer.tsx"
    ],
    "names": [],
    "mappings": ";;;AAAA,qCAA8D;AAC9D,wDAA0B;AAE1B,6EAA+C;AAC/C,uCAAgD;AAChD,uFAAyD;AAazD;IAA0C,gDAEzC;IAFD;;IAmCA,CAAC;IAhCC,qCAAM,GAAN;QACQ,IAAA,eAWQ,EAVZ,wBAAS,EACT,kBAAc,EACd,oBAAO,EACP,oCAAe,EACf,sBAAQ,EACR,oBAAO,EACP,0BAAU,EACV,sCAAgB,EAChB,wBAAS,EACT,wBACY,CAAC;QAEf,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,qBAAqB,EAAE,SAAS,CAAC;YAClD,8BAAC,sBAAY,IACX,KAAK,EAAE,eAAe,EACtB,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,QAAQ,EAAE,QAAQ,EAClB,gBAAgB,EAAE,gBAAgB,EAClC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,EACpD,SAAS,EAAE,SAAS,EACpB,WAAW,EAAE,SAAS,GACtB;YAEF,8BAAC,iBAAO,IAAC,OAAO,QAAC,GAAG,EAAC,MAAM,EAAC,IAAI,EAAE,OAAO,GAAI,CACzC,CACP,CAAC;IACJ,CAAC;IAlCU,oBAAoB;QAHhC,wBAAc,CAAC;YACd,IAAI,EAAE,eAAe;SACtB,CAAC;OACW,oBAAoB,CAmChC;IAAD,2BAAC;CAAA,AAnCD,CAA0C,+BAAoB,GAmC7D;AAnCY,oDAAoB",
    "sourcesContent": [
        "import {OptionsControlProps, OptionsControl} from './Options';\nimport React from 'react';\nimport {Api} from '../../types';\nimport Spinner from '../../components/Spinner';\nimport {BaseTransferRenderer} from './Transfer';\nimport TabsTransfer from '../../components/TabsTransfer';\n\nexport interface TabsTransferProps extends OptionsControlProps {\n  showArrow?: boolean;\n  sortable?: boolean;\n  searchResultMode?: 'table' | 'list' | 'tree' | 'chained';\n  searchable?: boolean;\n  searchApi?: Api;\n}\n\n@OptionsControl({\n  type: 'tabs-transfer'\n})\nexport class TabsTransferRenderer extends BaseTransferRenderer<\n  TabsTransferProps\n> {\n  render() {\n    const {\n      className,\n      classnames: cx,\n      options,\n      selectedOptions,\n      sortable,\n      loading,\n      searchable,\n      searchResultMode,\n      showArrow,\n      deferLoad\n    } = this.props;\n\n    return (\n      <div className={cx('TabsTransferControl', className)}>\n        <TabsTransfer\n          value={selectedOptions}\n          options={options}\n          onChange={this.handleChange}\n          option2value={this.option2value}\n          sortable={sortable}\n          searchResultMode={searchResultMode}\n          onSearch={searchable ? this.handleSearch : undefined}\n          showArrow={showArrow}\n          onDeferLoad={deferLoad}\n        />\n\n        <Spinner overlay key=\"info\" show={loading} />\n      </div>\n    );\n  }\n}\n"
    ]
}