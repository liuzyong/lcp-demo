{
    "version": 3,
    "file": "HBox.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/HBox.tsx"
    ],
    "names": [],
    "mappings": ";;;AAAA,wDAA0B;AAE1B,+BAAkD;AAGlD,kEAA4B;AAC5B,6CAA6C;AAY7C;IAAkC,wCAA+B;IAAjE;;IA6EA,CAAC;IAzEC,mCAAY,GAAZ,UAAa,MAAW,EAAE,GAAW,EAAE,MAAc;QAC7C,IAAA,eAAgD,EAA/C,0BAAU,EAAE,cAAI,EAAE,mBAA6B,CAAC;QAEvD,IAAI,CAAC,kBAAS,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;YAC5B,OAAO,IAAI,CAAC;SACb;QAED,IAAI,KAAK,sBACP,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,MAAM,EAAE,MAAM,CAAC,MAAM,IAClB,MAAM,CAAC,KAAK,CAChB,CAAC;QAEF,OAAO,CACL,uCACE,GAAG,EAAE,GAAG,EACR,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,oBAAE,CACR,EAAE,aAAU,EACZ,EAAE,eAAS,MAAM,CAAC,IAAI,IAAI,QAAQ,CAAE,EACvC,MAAM,CAAC,eAAe,CACvB,IAEA,UAAU;YACT,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC;YAC7C,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,YAAU,GAAK,EAAE,MAAM,CAAC,CACzC,CACP,CAAC;IACJ,CAAC;IAED,kCAAW,GAAX,UAAY,MAAc,EAAE,IAAY;QAChC,IAAA,eAA8D,EAA7D,kBAAM,EAAE,oCAAe,EAAE,sBAAQ,EAAE,gBAAK,EAAE,gBAAmB,CAAC;QAErE,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;YACvE,OAAO,eAAe,CACpB,IAAW,EACV,KAAgB,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,EAC1C;gBACE,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,QAAQ;gBAC3B,UAAU,EAAE,IAAI,CAAC,UAAU,IAAI;oBAC7B,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC;oBACR,MAAM,EAAE,CAAC;iBACV;gBACD,KAAK,OAAA;gBACL,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,MAAM,QAAA;aACP,CACF,CAAC;SACH;QAED,OAAO,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,6BAAM,GAAN;QAAA,iBAkBC;QAjBO,IAAA,eAAuD,EAAtD,wBAAS,EAAE,oBAAO,EAAE,YAAG,EAAE,mBAA6B,CAAC;QAE9D,OAAO,CACL,uCACE,SAAS,EAAE,oBAAE,CACR,EAAE,aAAU,EACf,GAAG,CAAC,CAAC,CAAI,EAAE,cAAS,GAAK,CAAC,CAAC,CAAC,EAAE,EAC9B,SAAS,CACV;YAED,uCAAK,SAAS,EAAK,EAAE,SAAM,IACxB,OAAO,CAAC,GAAG,CAAC,UAAC,MAAW,EAAE,GAAW;gBACpC,OAAA,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC;YAA9C,CAA8C,CAC/C,CACG,CACF,CACP,CAAC;IACJ,CAAC;IA3EM,sBAAS,GAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACnD,yBAAY,GAAuB,EAAE,CAAC;IAFlC,YAAY;QALxB,eAAQ,CAAC;YACR,IAAI,EAAE,MAAM;YACZ,UAAU,EAAE,KAAK;YACjB,WAAW,EAAE,KAAK;SACnB,CAAC;OACW,YAAY,CA6ExB;IAAD,mBAAC;CAAA,AA7ED,CAAkC,eAAK,CAAC,SAAS,GA6EhD;AA7EY,oCAAY",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../../factory';\nimport {FormItem, FormControlProps} from './Item';\nimport HBox from '../HBox';\nimport {Schema} from '../../types';\nimport cx from 'classnames';\nimport {isVisible} from '../../utils/helper';\nimport {IIRendererStore} from '../../store/iRenderer';\n\ninterface HBoxProps extends FormControlProps {\n  store: IIRendererStore;\n}\n\n@FormItem({\n  type: 'hbox',\n  strictMode: false,\n  sizeMutable: false\n})\nexport class HBoxRenderer extends React.Component<HBoxProps, any> {\n  static propsList: Array<string> = ['columns', 'onChange'];\n  static defaultProps: Partial<HBoxProps> = {};\n\n  renderColumn(column: any, key: number, length: number) {\n    const {itemRender, data, classPrefix: ns} = this.props;\n\n    if (!isVisible(column, data)) {\n      return null;\n    }\n\n    let style = {\n      width: column.width,\n      height: column.height,\n      ...column.style\n    };\n\n    return (\n      <div\n        key={key}\n        style={style}\n        className={cx(\n          `${ns}Hbox-col`,\n          `${ns}Form--${column.mode || 'normal'}`,\n          column.columnClassName\n        )}\n      >\n        {itemRender\n          ? itemRender(column, key, length, this.props)\n          : this.renderChild(`column/${key}`, column)}\n      </div>\n    );\n  }\n\n  renderChild(region: string, node: Schema) {\n    const {render, renderFormItems, formMode, store, $path} = this.props;\n\n    if (node && !node.type && (node.controls || node.tabs || node.feildSet)) {\n      return renderFormItems(\n        node as any,\n        ($path as string).replace(/^.*form\\//, ''),\n        {\n          mode: node.mode || 'normal',\n          horizontal: node.horizontal || {\n            left: 4,\n            right: 8,\n            offset: 4\n          },\n          store,\n          data: store.data,\n          render\n        }\n      );\n    }\n\n    return render(region, node.body || node);\n  }\n\n  render() {\n    const {className, columns, gap, classPrefix: ns} = this.props;\n\n    return (\n      <div\n        className={cx(\n          `${ns}FormHbox`,\n          gap ? `${ns}Hbox--${gap}` : '',\n          className\n        )}\n      >\n        <div className={`${ns}Hbox`}>\n          {columns.map((column: any, key: number) =>\n            this.renderColumn(column, key, columns.length)\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n"
    ]
}