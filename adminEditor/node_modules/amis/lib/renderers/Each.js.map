{
    "version": 3,
    "file": "Each.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Each.tsx"
    ],
    "names": [],
    "mappings": ";;;AAAA,wDAA0B;AAC1B,sCAAmD;AAEnD,oDAAqD;AACrD,0CAAuD;AAOvD;IAAkC,gCAA0B;IAA5D;;IAqCA,CAAC;IA/BC,qBAAM,GAAN;QACQ,IAAA,eAA0D,EAAzD,cAAI,EAAE,cAAI,EAAE,wBAAS,EAAE,kBAAM,EAAE,gBAAK,EAAE,gBAAmB,CAAC;QAEjE,IAAM,GAAG,GACP,OAAO,KAAK,KAAK,WAAW;YAC1B,CAAC,CAAC,iBAAQ,CAAC,KAAK,CAAC;gBACf,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,CAAC;oBAC7B,GAAG,EAAE,GAAG;oBACR,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC;iBAClB,CAAC,EAH4B,CAG5B,CAAC;gBACL,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;oBACtB,CAAC,CAAC,KAAK;oBACP,CAAC,CAAC,EAAE;YACN,CAAC,CAAC,6BAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAElC,OAAO,CACL,uCAAK,SAAS,EAAE,SAAS,IACtB,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,KAAK;YAC1B,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,UAAC,IAAS,EAAE,KAAa;;gBAC/B,OAAA,MAAM,CAAC,UAAQ,KAAO,EAAE,KAAK,EAAE;oBAC7B,IAAI,EAAE,qBAAY,CAChB,IAAI,EACJ,iBAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,WAAE,GAAC,IAAI,IAAG,IAAI,EAAE,OAAI,GAAE,IAAI,KAAC,CACnD;oBACD,GAAG,EAAE,KAAK;iBACX,CAAC;YANF,CAME,CACH;YACH,CAAC,CAAC,IAAI,CACJ,CACP,CAAC;IACJ,CAAC;IAnCM,cAAS,GAAkB,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACtD,iBAAY,GAAuB;QACxC,SAAS,EAAE,EAAE;KACd,CAAC;IAiCJ,WAAC;CAAA,AArCD,CAAkC,eAAK,CAAC,SAAS,GAqChD;kBArCoB,IAAI;AA2CzB;IAAkC,wCAAI;IAAtC;;IAAwC,CAAC;IAA5B,YAAY;QAJxB,kBAAQ,CAAC;YACR,IAAI,EAAE,wBAAwB;YAC9B,IAAI,EAAE,MAAM;SACb,CAAC;OACW,YAAY,CAAgB;IAAD,mBAAC;CAAA,AAAzC,CAAkC,IAAI,GAAG;AAA5B,oCAAY",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {Schema} from '../types';\nimport {resolveVariable} from '../utils/tpl-builtin';\nimport {createObject, isObject} from '../utils/helper';\n\nexport interface EachProps extends RendererProps {\n  name: string;\n  items: Schema;\n}\n\nexport default class Each extends React.Component<EachProps> {\n  static propsList: Array<string> = ['name', 'items', 'value'];\n  static defaultProps: Partial<EachProps> = {\n    className: ''\n  };\n\n  render() {\n    const {data, name, className, render, value, items} = this.props;\n\n    const arr =\n      typeof value !== 'undefined'\n        ? isObject(value)\n          ? Object.keys(value).map(key => ({\n              key: key,\n              value: value[key]\n            }))\n          : Array.isArray(value)\n          ? value\n          : []\n        : resolveVariable(name, data);\n\n    return (\n      <div className={className}>\n        {Array.isArray(arr) && items\n          ? arr.map((item: any, index: number) =>\n              render(`item/${index}`, items, {\n                data: createObject(\n                  data,\n                  isObject(item) ? item : {[name]: item, item: item}\n                ),\n                key: index\n              })\n            )\n          : null}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)(?:repeat|each)$/,\n  name: 'each'\n})\nexport class EachRenderer extends Each {}\n"
    ]
}